hello hello hi hi hi michael hello
everybody good morning good evening
good good afternoon wherever you are
and welcome back and welcome back
exactly happy new year
welcome back alex i hope you had a good
time off i had a good time off uh it was
it was very very quiet but that was that
was uh you know a little bit the goal of
it all so yeah that was good
it was quite quiet so only family time
and yeah
not much meeting other people just
uh seeing the in-laws on the dead and
otherwise they
all right yeah
yeah
so i actually got new hair even yeah i
saw it
i didn't want to get omicron at the bar
shop so basically i did it
[Laughter]
your wife is now your new um
uh your new point of uh of of all things
hair
actually i did it all by myself
[Laughter]
[Laughter]
yeah i got up at 3am and i realized this
is the time now it is time it needs to
go
exactly
cool yeah um
good to
be back i'm really excited and uh
especially about today's topic uh
because um
we're gonna talk about hamilton and
that's a big favorite of mine and
yeah i can't wait to get started with
this sounds good yeah exactly now let's
let's dive in um you know if you when
you watch this live let us know in chat
where you're watching this from it is
always nice to see
uh where where you are uh from and where
where this is you know
uh is this your lunch break is this your
morning first thing in the morning or is
this is this for you later in the day um
how was your new years also you can
share with us uh in chat if you like so
it's always
uh that's that's always something so um
but yeah
let's see what what what you all write
and and let us know and then meanwhile
let's
let's go in
here
and i'll give a quick quick overview um
of
the
session today
so the plan uh it's it's
it has been the plan for quite a while
and it still is the plan so we'll see
how
if if you change the format uh at some
point but still at the moment it's it's
it's going to be like this
um i'll give a quick recap of what's
neo4j already be free um then we we pick
a data set um
if you have a data set you'd like us to
explore please let us know
you can reach out to us on discord on
twitter on linkedin on even on youtube
just put it in the comments on the
on the video here and say hey i've i
found this data set that looks cool
why don't you check it out and uh
and we will we will have a look at it
obviously you can also write as a
boring old email but but other other
things is
as is possible as well
um and then we think about the questions
what kind of what kind of um you know
what's the data model like what kind of
queries we would like to see run and
then where will we go we take it from
there
uh determine the data model then load
obviously the data set and query
and then explore it some more
um
what is neo4jrd3 just quickly this is a
free version of neo4j or db so graph
database as a service
it's free for you and forever
so you just register once and you get a
free instance
of oradb of neo4j basically in the cloud
it has some limitations um so it's
limited to 50 000 nodes and 175 000
relationships but other than that it's
it's basically everything's there it's
it's the same as the other editions
and you get access to neo4j bloom which
is our visualization tool so it's it's
that's quite quite a good feature to
have
and obviously browser
which you will see uh later today as
well
um like i said it's free forever um if
you um if you start it up if you
register today you get it um and then
you can try it yourself it's it's a
great way to to start your your path uh
uh with neo4j or if you already have
experience with you know
desktop or other other services
like the sandbox then this is a good way
to if you want to
move your your stuff into the cloud i
think this is the this is a good next
step
um the land the link is here um i will
post that in chat in a in a second
and um
yeah so what are we going to do today
michael already hinted at a little bit
and i think the background of his webcam
might also
give a little of a of a hint
um it's it's going to be hamilton
so
so
all the enjoys
yeah you got the book there um
have you have you watched the the
musical yeah i was actually really lucky
when i visited the neo4j office in san
francisco in 2019
there was how much time playing locally
in san francisco so they had like a
separate performance not just a new new
one but also one in san francisco i got
the last seat like a pulled out seat
somewhere and it was amazing to see it
in person and
i was very lucky to be there and
actually i have even a picture of me in
front of the
theater as well so i'll call it later
yeah as well and it was really amazing
and
ever since so we also watch it at home
we even got in a canvas to watch it with
the projector when it came out
and
i've been running it on
on loop basically
one of my go-to musics for
for reading or just walking or running
or something like that okay lots of
energy and good lyrics and uh so it's
a lot of fun even my goals we love it
this time frozen i guess
i actually never ever watch it i i now
that you mentioned it i remember that it
is on disney plus so i yeah i kind of
have it on on my on my watch list but i
always
do it for whatever reason i forget
invite some friends or do it like remote
watch party together or something like
that like these kind of start parties
yeah you can watch with some folks
together it's definitely it's an amazing
amazing experience
i hope at some point that i'll get to
see it in new york uh but i'm not sure
if that will happen
who knows hopefully i mean at some point
all
all this whatever is happening at the
moment has to be over and then then yeah
it surely
actually should be possible to do that
again
cool
so let's get right started i'll say i'll
share my screen show you okay i just
wanted to say do you want to share your
screen or shall i
share this
is it this trailer you can share the
trailer and then
all right you exactly you get ready and
i'll i get i get the
the trailer set up so
let me
i hope that the audio sharing comes
through on me
we'll see how that goes but let's
let's play that and
for everybody who does not know what's
what's hamilton i think this one minute
should give us a
good overview
right now i can't hear any audio
oh you cannot hear audio
no okay let's see if i can
if i need to change something but i
guess otherwise you can also drop your
link into the chat as well i can drop
the link into the chat yeah it looks
like audio is not pulled through from
screen sharing
oh you have to put it on speakers and
then
then my uh well then i get like i create
a crazy echo
um
so okay well then let's let's i can we
can talk over it then i guess so sorry
that you can't hear it but i'll put the
trailer in in chat but this is
you know this is the musical and then
michael maybe you can get your
your screen set up
perfect so this is the
trailer
i saw you posted it in chat already so
that's that's where you where you find
it that's where you can
can watch it or if you have a
running subscription to disney plus i
guess then you can
okay
so
let me show the screen really quick
this one
um
cool
so and um
actually if you want to see that so this
is me in front of the theater in uh in
san francisco
[Laughter]
that was pretty cool
and actually um
something something really cool i came
across a while ago is uh by shirley wu
she's an amazing visual artist so she
does a lot of amazing art with data
actually so she's a data visualization
expert and artist than she did in 2017
actually
and visualization of every line of
hamilton so she took all the lyrics
assigned who thinks the lyrics which
groups and what is the content of the
lyrics which themes do they have what
words are in there and and whom are they
directed at and all these things and she
put this all together into an amazing uh
visualization so you see like every dot
here is a piece of lyrics
and uh colored by who sings it and and
so on and then it continues uh with
explorations and repeated patterns and
and and things like that so it's it's a
really amazing
visualization super nice i'll also drop
it into the chat so we you can
see it for yourself so there's a lot of
to explore here um
uh so definitely check it out and and
it's in it's an amazing work um and you
can sort and filter and search in the
data and see graph visualizations and
other uh kinds of visualizations of your
lyrics and and so on so it's really
really nice
and um
also analyzing certain certain parts of
the
repeated patterns and then and so on so
it's really
really nice
to play around with and what's actually
also really cool is that chile put all
the data on github
so we can actually take the data from
her
visualization which is here on github in
repository and we can import this
data directly into aura free so she
already did all the hard work of of
preparing the text how nice of heading
up
yeah she's amazing
she also has a really nice book so just
a quick plug
it's called uh
it's called uh
data sketches
i guess and it's a really cool uh book
about data visualization uh if you want
to have a look yeah it's really good um
anyway so she put together all this uh
data here uh in 2017
and uh so we have data on all the uh
all the aspects of the musical so we
have the characters we have the uh songs
uh we have the uh parts of the song so
kind of
uh parts of the lyrics which one
character or one group sings
we have all the words in the uh in in
the text we have themes like
uh like satisfaction dissatisfaction
death and
and things like that uh as well and then
breakdown and she actually she really
breaks it down by song and position
within the song and and stuff like that
so it's really kind of fine-grained uh
data as such
and uh we can look at um at the data in
detail as well and so what i always
wanted to import this data into neo4j
but i never got around to it and over
the holidays one night late night or so
i
i got reminded of it and then i uh
basically said okay no no i'm gonna do
it and then at like two or three and i
was
done
looking at everything and i just want to
share with you uh how we did that
so uh before we go into that let me just
clearly quickly create the aura database
so we have it up and running when we
need it so i just went to aura databases
create new database i'll pick an oil be
free
name it hamilton in my case i pick
belgium as the closest one to myself and
create a blank database
and then i just click create database
and that created the database in the
background and we come back
to this
afterwards meanwhile while it's creating
the database it takes two to three
minutes in any background to um to
create a database but we can look at as
actually the the data model a little bit
so let's see so we have arrows which is
our modeling tool that we've been using
all the time
and so it just gives us an easy way of
modeling the graph um so what's what's
most important it's kind of the song
in the musical right so musicals
wouldn't be anything without songs and
then of course we have the performers or
singers right
so we have a
singer
which can be
an individual or a group which performs
its own
right so that's kind of the basic of the
of the musical right um
in in her data set she actually uh
differentiates between uh individuals
and groups
so our singer could be either a group of
people kind of like a chorus or
something like that or an individual
and they perform the song
and then each song
consists of a number of lines and a
group of lines sung together by by a
group are represented in this data as as
an object called lines
uh so which is a bunch of like one two
three
four lines of of a song
and uh that's uh lines of the song
so that's our uh second piece of our uh
data set here right
so
what else do we have uh so actually the
singles are not actually assigned to the
song but they are assigned to the lines
so
um
yeah so what you can do is uh there are
actually three types of relationships in
in in here between the singer and the
line so one is uh basically just the
person or the group singing the lines
uh the second one is um
[Music]
they are excluded so i'm not trying to
present sure
what that means but they are kind of
either probably dead already at this
point in the musical or for what other
reason uh they excluded from singing
lines and then the third thing is also
interesting which is basically uh some
lines are directed at a person so if i
sing towards hamilton or towards eliza
then i'm directing these lines towards
the person as well ah okay all right so
we also see kind of these whom are they
speaking to um which is nice for like
conversations or dialogues or things
like that
right
okay so that's one part of the musical
then the other one is kind of a bit of
enrichment uh which are these uh themes
and uh categories of themes so
so uh surely kind of extracted themes
so and that
lines have a theme
i think it's theme thing you know
and it's a part of a category
right so this could be we'll we'll see
it in the files in a second and then the
last bit is um
basically words right so lines uh
contain
or contains
word so like all the words of the songs
together
in
in
in these word notes so and of course if
a word is repeatedly contained in
different lines then their multiple
contains relationships as such
that's our data model that we want to
import uh basically the the center here
is kind of the essence of the musical
and the other ones are enrichments like
the themes and categories so that's
something actually added uh to this and
also these kind of directed at
something that's not inherently
uh in the in the data but you have to
basically
process the data and she also talks
about this in her
in her virtualization how she proposes
the data and and so on so it's really
good
so and with that we can actually have a
look at our
uh database i just copied the password
here
and we now have hamilton
and you can open it with me for your
browser
and paste our password here
connect yeah remember to copy that
password or save it somewhere because
yeah you need it
otherwise you have to destroy the
database again and all you have to
ask support um to do this for you so and
then this is kind of an empty database
right so there's nothing in here right
now
and i have this um github project uh
here with all the details
so you also see the kind of final model
here and some verbal descriptions so
i'll also put it into medium post so we
have it there as well so i'll paste this
into this into the chat as well so if
you want to
come along uh feel free to
uh come along as well
so uh initially we already talked a
little bit about our uh
entity so we have singer we have lines
we have song we have theme category and
word
and so we just create a bunch of
constraints so that each of those ids
can be quickly found when we
want to connect the nodes
and then we additionally add an
index on the single's name and did some
titles as well
we can just copy and paste this whole
set of commands here and paste it into
neo4j browser
and
then execute it and it will just execute
them
in one go so if you click on each of
them then you see also that they
are successful and a little bit of more
detail yeah
cool that's all now successful and now
in the sidebar we already see the labels
uh and some of the property keys here
and these are taken from the
indexes and constraints as well
so there's still no data in the database
so if i if i check then
it's still empty
right
so now it now it gets interesting so if
you look at
shirley's data
so something that
she has here is this songlist
dot json so if i open this we see it's
basically just a json file um
with uh
ids as keys and then uh
an array as as data and most of the
files that she has are built up this way
uh so which is a little bit of an
uncommon format uh but we can make it
work within cipher it's not
uh not impossible it's a little bit
cumbersome but not too much as such so
what you want to do is this is basically
just a the list of songs and the idea id
and after the hashtag at the end is just
a
unique
unique value
color code
uh color code i see okay so she has
some of the
uh files are explained
not this one
code
yeah yeah okay makes sense yeah
so what you're interested in is here
basically just a song title and we can
use the color but we don't need to use
it oh yeah okay
what she used i guess for her yeah
especially for a visualization right so
you if you see a song here then one
color is basically uh one particular
song yeah as such um
so we basically need to take this json
file uh take the keys here and then
basically provide each key with the data
in the second part and then extract the
bits and pieces that we need
okay so if you do this uh it looks like
this
i'll really look into this in detail
here
so i hope you can beat this well enough
um looks good
oh this is actually let's let me
uh singers here are the songs
let's do the songs first
it doesn't matter which order we do this
so this is our song list that's what we
just looked at right and then we just
get whatever is coming back from this
song list so if i remove the second part
uh and just return value then we see we
just get the json file back right so
with the key and then the array with the
values here right
so we can load the data from github
which is great uh so you need to use the
raw url so if you use this url it
doesn't work you need to go to here to
the raw url and then you can use this
one to load the data and do everything
okay and then we take this value um take
all the keys so
so these ids
at the front here you can take these
keys and then we provide each key and
the value of this key so basically
if i just
look at this return key then command
data then you get basically a table of
key in the first column and then the
data
array in the in the second column
search
right
and then what you can do is we just
merge the song on the key so this is our
id for the song
so we get a song and uniquely
merge it so we can also run re-run this
statement multiple times
and
it won't create more songs it will only
create the same amount of songs because
merge is get or create
and then we set basically the title of
the song
as the zeroes element so of this area
which is the title
and the color as the first element
of the array research and then it turns
off
okay and this should create now what is
it 44 songs or something like that
uh if i write something
so we now see all our songs 46 yeah 46
and so and you see all these songs they
all have an id
um this id
the color and the title
yeah as well
right
yep
cool
so basically we do the same with the
singers which is this character list
here
so we have the uh
again the id as a
as a key name of the singer
or the character
male female is the gender then we have
this is an individual group um here on
the third one
then there's here and
two fourths
thing
which i don't know i
figured out what it is um and then
another color uh here as well so this
two-fold thing i don't know and i just
ignored more or less
so and if you want to load the signals
here
it looks very different very similar to
what we had before for the
songs so all up here down here it's
basically the same the only difference
is now that we
have um two labels and the second label
is actually coming from our data so it's
kind of dynamically from the data so we
basically just take the default layer
before everyone is a singer and then we
have individual group
uh we just take the second data element
so let me just return
return
command value so that you see what it
looks like
it's
key comma data
and
so we have the key and then the name
gender individual
the true false any color and this
individual becomes old group becomes our
second label so we can pass in two
labels here in this
in this array
and then we have our id
uh the name
the gender this x-axis was the the true
fourth thing that i don't know what it
is and then the color research
so um if you notice then we have all our
singles now and you see we have 21
singers three groups and 18 individuals
right
so now we have uh singers and
uh songs in our graph so if i move to
limit here
uh so we have singers and songs
but we don't have any connections yet
between the two
and this is where the next file comes in
which is a little bit more complicated
which is this
um
which is this lines file and the lines
file even has a description here in the
uh
in the in the repository
uh which is a little bit hard to
understand
but
the key of a line is basically song
number colon
uh the
[Music]
line number or
lines from two with a dash in between
right so i have either
like song one line thirty first or song
one lines one two five
right
and then uh in this area that's who is
the character singing it who are the
characters excluded from singing it
uh which are the characters that we are
directing these lines towards so what we
have here in our uh model right so think
that who is excluded and was who are
these lines directed at
with the key of the
um of the singer
the actual lyrics so the text lines and
the number of lines how many lines are
there right
so if you look at these lines not just
them
then we see
so it's a little bit hard to read here
so that's why i took a
portion out of this ah here so we have
this is the key
uh these are the is the key again
basically and then who sings it who's it
uh
who's excluded from singing and who's
directed it and these are the actual
lines and then at the end there's a
number these are five lines as such
so it's a little bit complicated but
i've already done all the work of
matching that
to our graph
thing
and on my local database i could just
import all in one go
but when i tried it on aura the memory
limits
need us to
make it a little bit in or imported a
little bit in chunks
so i'll say something about this right
now so our chunking is uh two ways one
is we have a skip limit here at the
beginning that kind of
always imports like 200 lines in one go
and then we also do the actual uh data
creation in in chunks of 100 rows as
well
so here at the beginning it's the same
what we always do we can click the json
and take the line and the data from the
line so that's
not nothing special
what you have to do here is you have to
split out the song id which is before
the colon and the lines which is behind
the colon basically
and then the singers excluded the
directed the actual lines text and the
count number of lines
so that's kind of just the content of
this area that we just saw here
um
here
up here so this is kind of what we just
extract from this
and then um
we find our song
we create our entry for the lines with
the key here that we got
set the text and the number of lines and
the
uh
id's law one two five or thirty one or
whatever so kind of the offset um
and then we say this is a line of this
song this
relationship so basically what we said
here
lines of the song this is what we create
here
and then uh for each of these arrays
with singers we do
the thing where we say okay we go over
all all of these areas and say okay we
don't we want to skip those where
there's an empty string in there because
some of those have like empty strings
uh which we don't have a single four of
course right so this here is an empty
string and there's another single for
that but for this one we have to have a
singer
and um so we skip
the empty string so i mean i guess this
this looks into if if if one
if one is singing this by himself or if
he's singing it with somebody else on
on stage or yeah so it could be a group
singing it right so it could be two or
three people singing these lines
together yeah
so then that's why it's an array right
so that's why we kind of have multiple
singers uh in this uh singer's area yeah
and then we just find the singer and
[Music]
connect the singer to the
lines and also connect a single tool
song
as well
and then for the other two bits excluded
and directed vsa the single is excluded
from these lines
or these lines are directed at this
person basically
as well so we do three times the same
thing basically just with different
relationship types so once we say this
person thinks this lines this person is
excluded from these lines or just these
lines are just directed at this person
so it's basically these three
relationships that we talked about here
in the beginning
um that's what we do in this in this in
this part of the statement
and that's it basically and then we do
this in
in chunks of 100 rows so i have to run
this
seven times and increase this skip
manually so we could also have automated
this but i didn't want to
know too much so we run it once
200 lines skip 200
under 200 lines
400
600
800
it's
800
one thousand
twelve hundred
and fourteen hundred
so we could have automated this with uh
an april periodic uh iterate or commit
or something like that then it would
have also worked
the problem here is that the json is
pretty big and so it has to click to
json in memory plus all the strings that
you extract from your json additional
possible the other values that we
extract from the strings from the json
and then also all the graph data that it
creates at the same time so that's why
it takes a little bit more memory uh as
such so because the json is multiple
times in there in different
representations
plus
uh like all the created graph data
that's why you have to do this or free
because aura 3 has only like 500 max or
so of or 300 max of memory or something
like that or even less yeah it's a
little bit more you know that's another
limitation i didn't mention in the in
the intro but you know it's it's it's a
little bit more
uh more shrunk down in terms of um yeah
memory versus the
the other editions but you know
it we either you work around it or or
you you know
yeah or you've taken you can also take a
larger instance import the data and
create a dump and then import it into
our free again that's
an option
um so now we see we have already 1400 uh
nodes now so all these lines are now
also india as nodes
and 4000 relationships as well right so
we can for instance now look at
our songs and pick one of the songs and
say okay
for these songs which lines are in here
and
[Music]
then these lines are directed to king
george for instance right and then
uh
you can
go from from here basically
or for instance uh this this song has
many more lines that are directed at
different people as well so you see the
song has the id 35 here
right here 35 and then all these lines
are starting with 35 colon
and then one two four
five two something and six seven eight
so these are all different lines
basically
um
as such and each of those lines are then
sung by by another
uh person or group as such and so here
for instance we see uh these lines are
directed alexander hamilton sung by
james medicine
right and uh so that's kind of what we
get in terms of like data in here
[Music]
yeah um you saw there that the king
george never sings in this song but he
is
a
target of
singing in the song i didn't see that in
the other direction
but for instance
we can now look at basically uh where
does uh aaron bursting in the song right
so and then we could kind of expand this
but he also sings in a lot of songs so
we see
pretty quickly that
he's a very active character right so
you see that he has a lot of lines in
the
um
uh in in this
one here as well
okay yeah
okay
but she should actually be connected to
one of these
lines here
interesting
anyway so i had one example query that
we can now use on this data so for
instance we can say
who's sings which songs right so that's
kind of a basic information of our
musical
right so we can just find this we
basically say we find a singer which
sings a song and which sings lines of a
song
and then we return the singer's id the
uh sorry the songs id the song title and
all the singers uh as such
and if you do this then we see here all
the songs in order
basically we had to order them by two
integer of the id because otherwise we
get in lexical orderings of one eleven
and then twelve and so on instead of one
two three right so we have to do two
individual foldering
uh but we see okay alexa the hamilton
the starting song is sung by a lot of
people
um
and then aaron burr is of course aaron
burr alexander hamilton mulligan and
lafayette and so on right so and then
you see the different he'll be back it's
only king george and the whole company
to the group
and so on right so
and
so
we see the different
uh songs in the
data set
of all the lines
what do you think
uh the other thing that's in here is um
uh the words of of
the data after all the lyrics so we can
also load them
again in chunks of 500 rows here
uh so if i do this
so this this is the text what what's
what speech
that's basically we already have text
but like uh basically
um
if you look at these lines uh they have
um
they have basically an array here
with the text
but you see of course because there are
songs and rhymes and lyrics you have a
lot of competition here like
wait for it is in in here four times for
instance right and um
so uh but if you look at the words there
would be only one word with weight
right so and and then if i click on it
it would basically show me all the all
the places where this word occurs in the
text basically but i can also do like
some
lingual textual analysis of kind of word
frequencies and
right so for instance if i want to see
which words have been used most most
frequently you can just say
return the endnote
word comma
size of
and
contains
so as
uh
frequency
order by frequency descending
so we see eye
obviously yes
so basically
uh all the pronouns right and then um
all the typical uh verbs and yeah
just that articles
and then what's what's the first word
that's not time
time and hamilton i imagine
a time right times
right so
and away and room i'll be in the room
when it happens
tonight so
and
uh and then sir because that's with
aaron burr and the washington there's a
lot of service
and
shot is also 50 times so because that's
really important
duals and all the other stuff
i don't want in this much thought
okay so these are the words that you can
get yeah over here i have for instance
an example query that says show me the
id what satisfied is coming up right so
if i use this query i can look at
this word where the word is satisfied
look at the lines which are
containing this word and which songs can
turn containers and then for each song i
return the title of the song
uh basically this one line that contains
it basically so from the from the area
of lines uh i want to have this index
this one line that contains the word and
the word itself
and if i return this then i see okay our
word is satisfied and then this is the
song title and this is basically
um
the line with the ah where it appears
basically in in the song
exactly
right
so and and so you see that it comes out
quite quite frequently
frequently non-stop is is uh
featuring lots of satisfied moments yeah
yeah
exactly
cool and the last thing that um actually
prepared was this kind of themes so if
you look at the theme list.json
seamless.json we have things like
ambition relationship personality
more ambition
[Music]
contentment
and and so on right so
um
so these are like uh again our keys and
then uh the text lines now these are
actually the themes and then this is
like a category of the theme basically
and so we can import basically uh same
way we have the key and value and then
we create a theme and a category from
the second piece of
data
and so if i import this
we also get the
the theme supported
we can say
the theme is
configured to have the text and the
category here is for instance death and
you can see which
uh
which theme is in here or for this one
you can see which category is this in
personality for instance and this is one
that has ambition and
and and so then some
have ambition here as well
right so we see kind of this is our
category and these are themes that are
popping up and then we connect
the themes to the text actually so
there's another file which is
things.json which is a little bit
complex as well
which has the
mapping of the song lines and this one
was a little bit hairy to to handle
because it has like
um
this is kind of the lines this is the
song and the 27 is basically the line
within the lines that has this theme
basically so that's a little bit what's
a little bit harry potter
so you see there's a lot of like split
and split again and split again and then
if you reconcatenate stuff to
the true line's id and so on so that was
a i had
to
wrestle a little bit with this one but
that's
now done you don't need to do it anymore
so now we have connected all the themes
to and
two lines
and now we could for instance for these
themes we could uh extract these and say
okay rise up as in all of these lines
uh as such and then you can say okay and
these are then connecting to the song
to the song here and then
we see basically that do the themes
occur
and for a query for instance we can see
uh where does the
death
death category
over which themes over which lines over
which songs
is disconnected right so if i want to
see
who's all
where talking about death in this data
then
let me just see
um
so i zoom out a little bit
uh so we see it just saw death category
here this is connected to this one theme
and then these these blue ones are all
our lines
and uh these are connected via uh the
songs
uh or they're connected to the songs and
to the people as well right so
hamilton thinks a lot about death george
washington eliza when their son dies and
when hamilton dies basically
and the whole company sings when
hamilton dies about death
and iran below also things uh
about death in the last song where he
killed um alexander hamilton hamilton
as well
so
you see these kind of themes coming
through in the um
in the musical
search
so the the
the purple note here in this case is a
little bit of an explanation
of the theme right but yeah it's kind of
a phrase for the between right so it's
more like an
uh what stance so this is basically
um
[Music]
it's actually two
sentences right so there's one sentence
i mean
it's kind of one of the recurring things
i imagine death so much it feels more
like a memory
and then uh are we living too fast and
can we make this moment last basically
so these are kind of
phrases around the theme of death
basically right and um and these are
recurring and different because it's a
musical you know they pick up certain
lines time and again
okay i see yeah and so you have these
kind of functions here you see in this
if i go here in this in these lines of
this song then i see then this comes up
here again and this is actually
something that truly mapped manually
basically uh because of course always
the spelling is not exactly 100 the same
but she basically went through all these
lines manually and mapped all this uh
uh detail manually for her
virtualization which is really cool
because now we can use this to do our
own analysis on top of the
of the data
yeah yeah uh so and i have a bunch of
queries on top of this uh now for
exploration purposes
by the way if there any questions let us
know um happy to
explain more in detail over
about things let's just
yeah i'll have a look
so the one one thing i wanted to explore
because she has this directed
relationship right lines are directed at
someone right
so i wanted to see who's most singing
lines that are directed towards
alexander hamilton so not where he sings
but who are speaking to him as such
right so i basically
uh took this uh statement here this
query
and uh i just quickly explain this
so we have an um
a single some singer who sings lines
which are directed towards alexander
hammer time right so this is this lines
are directed towards alexander hamilton
by some singer who sings these lines
right
and then i also say
um
which
theme and which category are these lines
part of right so what is the the topic
of this kind of
conversation or this
accusation or whatever it is right so
and uh actually it would be a nice
enhancement for the data as well if you
had okay is this kind of a conversation
is this a command is this an accusation
is this a
romantic love thing or yeah what's the
tonality of the yeah kind of tonality or
like the purpose right so identity
return this singer's name
[Music]
how frequently under the distance occurs
and the categories that we see coming up
uh here right
uh so which kind of higher level
categories are there so nvc eliza
sings in towards hamilton with
death and legacy contentment when she's
frustrated because she cheats on her
uh but also with ambition that's when
she says you know don't we have enough
and and
don't be zone vicious and that rather
live a good life together
uh aaron bursting towards uh hamilton
the relationship legacy ambition so they
both kind of are fighting and competing
a lot
uh and he has also a lot of personality
aaronville as well
and
[Music]
similar to washington
maria reynolds is the
woman that alexander hamilton cheats
with uh
so she thinks more about personality
relationship topics right so
and his son uh
philip hamilton sings with michelle's
song
for originals also death and legacy
would also be a good fit for philip as
well
so this is kind of where we can see a
little bit more uh kind of about like
the
the the style and the tone and
what kind of conversations are here as
well
speaking of conversations uh the other
thing that i always am interested in
that we also looked at in game of
thrones and some other data sets is kind
of um or also in like something um
like uh pandora papers was who's has
joined involvement basically with
something right so where can we see a
person-to-person network
basically hidden behind this data right
so we have one person singing something
another person singing someone so who's
jointly singing so who do that's
and that's basically this uh joint
relationship or this joint uh
involvement that you can see
you know two people watching the same
movie two people investing in the same
shell company or two people singing
lines together which is was the probably
most harmless version of that
thing right so and so you have
uh i just picked thomas jefferson
the
second president
and then basically who sings with thomas
jefferson how frequently right so
and
look at this data for instance so we
have james madison who was part of the
jefferson gang aaron burr
who competed with jefferson in an
election
and then of course alexander hamilton
who
was the
finance minister when jefferson was the
minister of state
so foreign affairs and uh
so in george washington also a little
bit right so that that's kind of and if
you change this off and say for instance
who has song with
eliza
so i hope i didn't misspell her name so
her sister angelica the company her
other sister peggy
and
actually it's really interesting that
um the same lines so kind of jointly uh
hamilton and eliza never had kind of
singing something together
right so they only sang at each other
but not like jointly yeah
because this kind of joint singing right
yeah which is kind of interesting
as such
and then uh
the other one that i had is here
who sings uh with
uh washington and how can we visualize
this right so george washington
and basically the same clay but instead
of returning the the counts here we
actually return the the graphic
translation of that so we have here
george washington in the middle
and these lines and then who sings with
washington in these lines basically all
right so it's kind of the second degree
network of
of of washington or the first degree
network actually right so he because he
sings with these people
uh basically as such
so they share
lines that they they sing together
right so that's kind of the so it's the
first degree network actually right so
it's basically like like co-actors in
the same movie
you could
is really interesting so we haven't
gone deeply so you could do more good
and then this is for instance in terms
of language and things like that you
could also correlate themes to words for
instance so we for instance what you
could try to do is to say
i just need to look look at the time
that we're not exceeding time too much
so if you look at words
and then we say certain lines
uh have
words and these lines also have themes
uh now this is contains actually
contains words
and has a theme
which is part of our
category
so we can actually see
how frequently which words are in which
category
for instance right so are there certain
words which are more describing for
certain categories
[Music]
so this is the overall thing so for
instance okay it began and so it's
probably not so interesting so what you
can say is where
their
size of w word is greater than
[Music]
so
yeah this also fits right enough with
contentment
wood with uh wood with contaminants
interesting
but satisfied with contentment right so
and what do we have happened with
ambition throwing
i'm not throwing away my shot
uh is this enough if legacy also fits
story reflective
so you see also kind of this verbal
correlation of uh
of text with themes as well right
which is kind of culturally interesting
and uh
yeah so that's that's another thing that
you can do so there's much more in there
right so you could also look at the at
the timeline of the songs who's
appearing in which timeline in which
order one when do we people appear
disappear in the in the story
um
all right so for instance you have
people
i mean what would also be interesting is
to kind of see the artists that kind of
play the different people because
there's some people who play
multiple
characters basically as well
and uh so for instance uh peggy
disappears after a song number of four
or five for instance
uh or uh
well
john lawrence also disappears after the
war because he's killed in a war for
instance right and or philip the son of
alexander hamilton disappears after he's
killed in the duo as well right and you
can also look at who's there throughout
the whole musical and
and who's kind of has only like limited
time spent well like king george only
pops up around the war and then he's
also gone at the end oh no there's
actually
a song when um
adams becomes president
and king george also kind of
makes fun of the americans as well
so um so it's it's kind of interesting
to see that would be another interesting
thing to see kind of then what is the
timeline of the difference the timeline
now
and then you could actually imagine like
the visualization that uh shirley built
here to actually be backed by by the
graph database because then you can just
query the database for all these kind of
information uh and then get it back from
the database instead of just having this
static json files basically that are
handled in memory
uh as such right so and then
there are many more options that could
be
could be done as well
and for instance here the sorting and
filtering
it could all be done with the database
as well and this kind of visualization
who's singing what with whom
yeah
um
exactly so of course i didn't save the
password so i can't show you actually
the
this thing in bloom because i just
pasted it into the uh
uh so
yeah
sorry
um
but you can also visualize this kind of
data then in
blue they then can
do really nice
[Music]
interactive or
textual queries on top of the data as
well
right so that's probably something that
you can put into the medium article
yeah then as an example
cool and that's i think it what i wanted
to show and if you haven't seen the
musical and you have the opportunity to
do so please have a look uh
at least
online um if you see it uh there are
also some people who uploaded the the
content to youtube as well so um
for those of you that uh still want to
see it i don't know why it's still on
youtube why disney hasn't removed it
from youtube but
perhaps it's enough promotion for them
also i don't know
it has an official
hopefully it's an official channel of
some
yeah
for the trailer i saw actually that some
people had uploaded
the dsd songs
yeah maybe the songs are online
yeah it's definitely worth a while uh to
watch it it's an amazing piece of
art and
in manure and miranda did a really great
job there and i for those of you that
are fans of hamilton i can't really
recommend the books there's a lot of
detail and behind the scenes information
and each song is kind of explained and
and
it's really really good and it's really
well done in terms of production and
quality as well so
i believe
my wife got this book too
for christmas is this the book to the to
the musical yeah the official the the
stage book sort of or what what's it
yeah it's kind of like an
an
expensive version of a stage book right
so it's uh
it's
post-produced but uh
there's also was also like a stage book
but then um but it's really good sorry
for all the promotions
well you're a fan uh yeah we had pokemon
last time so i guess it's it's uh
cool it sounds good so i hope you all
enjoyed this and
perhaps also learned a little bit about
american history
and
so
looking forward to your feedback and if
you have anything that you want to see
here
don't forget to let us know either on
twitter or
drop us an email or
ping us on linkedin or whatever and
we're happy to pick up data sets and
ideas from other folks as well
exactly thank you very much michael that
was that was really good um and and
really interesting so i'll definitely
want to watch uh hamilton now so i you
know like i said it's on my list for a
while and kind of i don't know why it's
never never happened
um so we
i'll definitely watch that um we will be
back next next week with another another
episode but we will be this week
actually being the first week
fully back on schedule tomorrow we do a
special stream on um bloom 2.0
so that's happening tomorrow at 5 00 pm
cet so that's
happening now basically to but tomorrow
same time today same time as as now but
but tomorrow
and then on
wednesday um
my or our colleagues um flor and um
i don't know actually who else
glenn yes floor and glenn they they make
a um also at 5 pm cet so again same time
as now but on wednesday
they do
a stream on php and neo4j so if php is
something you're interested at
then
that's on wednesday it's gonna be a
series i think even uh see how see how
that goes um
[Music]
uh yeah again uh thanks for joining late
uh don't worry uh this will be on
youtube afterwards so you can
basically go back in time and watch it
from the beginning
so so that's that's not going to be a
problem
and then
one
last question i guess
does aura support
custom
custom procedures not apoc
so right now apoc only has also only
supports a subset of apocore
and uh so in oral enterprise there's
some options that uh people can uh
talk to the aura team about getting
custom procedures to the point as well
um but that's always an individual
discussion there as such
so for now uh it's apricor and
you know so i know it's pasted the link
to docs form or
oh perfect cool
this one
cool all right
thank you all for watching um have a
great week uh hope hopefully we'll see
you again soon uh thank you michael for
showing us around hamilton and um
yeah i'll see you next time
take care everyone take care bye