thank you everybody for joining us
and just very quickly
uh the whole point of these sessions and
you're going to see them every week
is we're going to go and play with nifty
or
free so for those of you what sort of
what sniff jay aura we'll see if you're
afraid don't worry we're gonna explain
it to you in a second but this is what
we're gonna be doing
aha so necro is on gmt plus three
excellent so it's a comedy time for you
it's currently 11 o'clock in the morning
for anyone so get a bit of distribution
going on this i think
uh necro and then one are in the same
location
right close enough i think yeah yeah i
know
i know close enough yeah same time zone
so very quickly what do these monday
slots look like what's the plan
so today and obviously maybe for a
couple of weeks and then we'll stop
doing it but for now i'm going to give
you a quick recap of what neo4j
aura 3 is we're then going to pick a
data set
so uh i've taken the liberty of
picking one this week so this is going
to be the basketball data it's an mba i
think it's the national basketball
association yeah usa
brandon so i'm going to show you where i
found that data set
we would love to explore your data set
so i know we've done this ad hoc
in the past where someone's gone hey
i've got this really cool data set i
think we had one
you remember alex with retail wasn't it
well yeah yeah
like yes so we love those
hi mandy thank you for joining us so if
you've got a cool data set
let us know i know someone's suggesting
a data set on
recommendations of audio so they're just
trying to get that sources so that might
be one
if you've got one tweet us let us know
on discord
shout it out or grab them love to hear
suggestions so the only caveat
is we need to be able to get that data
easy so we don't want to do any
downloads
if we can grab it from the github repo
or something like that
that's perfect but if you've got data
set let us know we're then going to look
at that data set
and we are going to
just explore it and figure out what
questions we might ask and then
based on that data set we're going to
figure out what the data model is going
to be
so good so far we're going to use arrows
for that and then
we're going to load that data up in the
uh in order free
and query simple as all good
so that's that yeah gonna do some more
shout outs alex i think we've got a few
more people joining in
we got a few more people yeah we have
koji from japan so um
i'm i'm very pleased that you're
watching us instead of the olympics so
that is that is that is good to see
welcome welcome koji um and i think uh
man up as well joining in yeah exactly
hi
welcome lab um do you got a question on
the lambda so
we'll talk that question and we'll come
back to you maybe not in this episode
but that's definitely something worth
exploring
so we'll come back to you in amazon
london's there
but what you'll probably do is if i
recall the top of my head
you do have the neofj drivers official
drivers so we've got python driver and
i think uh platforms commonly used for
lambda so you could probably do
something there as well
and i know it's not directly related to
the lambdas but my colleague will lie
our colleague will lyon has very
recently put together a very cool
blog post on how you can use github
actions
to scrape data as well so if that's
something you're looking at so
a plethora of things so hold that
thought and we'll get back to you on
that
exactly oh that is that is uh we might
do a special episode on on the
on the thing yeah uh negroduck asks
and i think that's a good question for
the data sets does it have to be in
cypher
um no it can be any any
any data set ideally it's a csv file
yeah yeah so for now if we can stick to
csv
i think there's a little problem at the
moment of loading json data so
for now let's stick with csv would be
perfect and i'm going to have a little
poke around
what the tools we've got in apox i think
we've got like an html loader as well
and an xml loader so
i think as we go along we're going to
have a bit of fun with this so
for now if you could suggest suggest
some csv data or
if you give us a head of time bit of
notice then we can have a look at the
other ones and we'll see what we can do
to wrangle it and get it up into aura
but yeah it's all good and yeah it's
amanda's in paris so that's
so that's ten o'clock local time there
as well in the morning
right let's go because oh we've really
got 50 minutes left we're going to try
and make these snappish
so we've talked about what the plan is
so very quickly what is nifty
aura shall we shall we play that video
lou
or shouldn't we we have a video
if we quickly shoot through this and
then next time we do the video i think
that's the next time
okay let's do it yeah so uh
it's a database as a service so it's up
in the cloud so you don't have to
download neo4j you don't have to install
it it's all available there
it's a managed service with elasticity
so you can
make it as big or as small as you need
your instance to be
and it's managed it's managed
infrastructure so it's a managed graph
database so
the aura will keep uh you know keep up
to date with the latest versions of
neo4j
it'll manage your backups for you it
will provide continuous
uptime overseas monitoring all of that
good stuff you would expect
with database as a service
and you can go off and have a look so
here's a link here to get
to the landing page so that's
dead.neo4j.com
aura
sorry sorry if you type x in twitch at
least the twitch folks
if you type exclamation mark aura you
also get that link ready for you and i
just did that so
if you if you want to go and dive in
right away you can you can do that yes
so or free slightly different so again
still
neo4j uh as a database of cloud service
but it's a free
free version of nefj aura so it has some
limitations so for example you're
limited to
50 000 loads and 175 000 relationships
but you still have access to neo4j bloom
and browser and it is free forever so
this is a
really great way to get started and have
a play
and you know build something in the
cloud
you have those options there available
and this is the whole point of these
weekly series that alex and i are going
to be doing with you
we are going to be doing it on aura free
so we're going to be looking at
different data sets so hopefully we're
going to
hit on something that you like and you
enjoy working with and you're going to
be like ah
yes so that's that's the goal and
because we we always use public public
available data sets
what we do now or in the coming weeks is
is is basically possible for you to to
recreate and and do the same at your own
time and you know spin up your own or a
free instance
import the data set you you think is
interesting like for example the nba
said today or any other set
uh and do the same things we are doing
now absolutely and we're going to get
going so we're going to be
using a data set from a website called
538
so don't worry we're going to post this
link but what i want to quickly do
before we crack on just because it takes
a little bit of time so i'm not going to
do this
we're not going to be doing this every
week but i just want to quickly
show you what it looks like so when you
sign into neo4j
aura you will be greeted with this page
so you can sign in either with an email
address or you can use
things like your google authorization so
here i've gone in with google
authorization
and you'll have this screen so if you've
not got any databases set up you'll have
this screen so i'm going to click on
create
database and you can see here for
database types i've got one here that
says aura
free so i i'm going to have the aura
free one so i'm going to
select that i need to give it some
detail so i'm going to call it
discover for a
free i'm gonna click the create free db
button
so i just need to make a copy of the
database
uh password so do make sure you make a
copy of the generated
passwords because it will not
save it for you and then you have a
little bit of a problem you can change
the password later
but if you lose that password you will
have to get rid of your database and
start again so do
make value a copy put in your database
uh make a copy of that password
somewhere or if you change the password
make a copy of that
and put it in a safe place so this is
going to take
a few minutes to load up so now whilst
this is loading in the background
let's explore where we've got the space
from
so there's this place called 538
so i'll pop that in the chat
and they've got loads and loads of
different data sets so
we were just having a quick scroll
through and i saw ah
nba nba mba so have a quick look
and i thought let's go for this so
next week i'm going to let alex dig dig
out a day set
yeah probably be gaming related which is
good maybe
so i decided that and what's really nice
about what's really nice about the 538
website
is you've got the buttons here and it
will send you over to
i think if you go to if i click on one
here it gives you the information about
it and a lot of these have a link to a
github repo
so this is where i've got the historical
mba data set from so
let's give you this link as well
that's alright i put it in chat oh thank
you look at that
super organized alex's so this is
the this data set so let's have a quick
look at what we've got in here
so we have got uh game order so
uh when were these games played we've
got a unique identifies this unique
identifier
is the date the match took place plus
the code for the home
stadium where the match took place
you've got leagues obviously got a
number of leagues with the nba
is copy i will it'll probably make more
sense we go through the day tonight and
i'll show you what's going on there
so yeah game etc etc team id this thing
we're interested in
how many points the team scored elo
so for those of you who've not come
across elo before so elo
is a rating system so it was created by
a doctor elo there's also a band called
elo but it's not saying things electric
like
orchestra that's a completely different
thing but maybe that's
so uh so dr elo came up with this rating
system
so i'm very familiar with it because
it's used a lot in chess or a derivative
of it is used in chess
and basically it's a way of trying to
score how strong a team is
and long story short based on a result
an outcome a result of something you
will then make an adjustment to a team's
rating
you've got the opponents team id and so
forth so game location all these really
useful things so this is the data
and if you click on the csv
obviously you can't see it so if we go
to view raw
and this is the raw data so if you would
like so
you can either click on the view raw
button or track that into the
chat as well so very quickly this is our
csv
and this link here this is what we can
use to query our data so let's have a
look oh it's
still going it's still creating our
database so let's dwell a bit more we
can do a data model whilst that's going
on in the background
so very quickly as we talked about here
this is our unique identifier so as you
can see this will be
iso so year month day for the match plus
the three code of the home venue where
the match was
played and obviously we know it's all
nba
so i think that was the yeah game id
and then here you've got the year where
it was played the date it was played
and oh okay this goes back to 1946
oh yeah yeah all right this is this is a
big big one oh yeah all the games and
then you've got the
the code and then husky so trh is for
the huskies i have no idea what the
huskies are based i presume
t refers to the country it's a good way
to uh get get prepared for your quiz
quiz questions you know pogba's i would
assume huskies is something some
northern state in the united states but
uh
i mean mba the only fact that they
basically popped in today was
incidents really is that the u.s
olympics team
lost for the first time in 17 years
yesterday i think
in the olympics so this is the only nba
effect
related nba effect i can now
share with you guys but i mean that's
about it
oh man but yeah you got that so we
talked
very quickly so this this is going to be
relevant so you got this thing
is year copy so it's this flag here you
see where it says nor and it says
one so that's just to say that that
it's a copy copy and
what you'll see is you we have a switch
around so
just bear with us on this so here you
can see this is the same so we've got
the same id
same this everything's the same so the
only difference here is the perspective
of the team
so here so we know that the huskies were
the home team because you got that trh
trh and you'll see a flag here that says
it was a home match so do you remember
we had game location
that's the game locations that's a home
match so this is in the perspective
of the huskies so here they had
i think this was the points one wasn't
it so they scored 66 points and they
lost so you see like a result flag
somewhere here
uh game location game results so so this
is in
so that these this each row is in the
perspective of the team being mentioned
so
in the huskies perspective they were
playing at home and they lost
from the knicks perspective they were
playing away and they
won so this is copy just lets us know so
i guess this is all about
how you're processing that data so some
perspectives you may want to pull in
both those roles
we might go down the route we infer the
result based on those models so that's
our data
so let's see where we're going okay
that's still going that's fine
and we still have to do the data
modeling so it takes a few minutes for
aura to spin up so
uh or free to spin up so it's not a
problem so i guess alex
what kinds of questions would you like
to ask of this data set
so we know what teams were playing we
know
when they played we know what the result
was we know how many points they scored
we know what their
rating is do you have any thoughts on
what you'd
like to ask the data yeah i think it
probably would be interesting
you know who played against whom and
what were the results so like
like in in like in this example huskies
against nix and then c maybe
in if possible maybe even with a with a
you know time timeline alongside of it
saying okay
uh huskies played the knicks i don't
know
15 times and
they lost and then we can see how many
times they lost how many times they won
when they played you know
two teams against each other over over
the
the iterations of the seasons yeah
that's the word
sounds good yeah uh any uh
by means if you those of you watching if
you've got some questions you'd like to
ask this data
pop them in the chat love to know yes
let us know
yeah so for me absolutely i'd love to
know the historical
matches and all that kind of thing i
think for me i would like to know
uh the range so we've got that elo
rating so the the
the geek in me is like going i want to
know which team has
the biggest improvement or biggest like
variance between
lowest elo rating and highest elo rating
so that's something i would quite like
to know
so that would be like a like a progress
from the from the team so
yeah so i think there's two isn't there
so one is like progress over time how
does your how does the elo change over
time or over matches
but the other one as well for me to know
is just like is there like an absolute
minimum
elo rating that someone's had and a
maximum or what's the variance like have
we got like a
big variance so i know for example in
chess having a variance of
more than 200 300 d low is you know
that's
like significant improvement so that'd
be questioning to see
or we've got some other questions coming
in oh rabbit ticks has just joined us
welcome welcome
if you've got any questions about mba
stuff
chuck them in so anyone's asked what is
the
success probability of guessing
relying on past experience for each
match
okay so using past experience i guess
that kind of fits in with the elo one
we'll have to have a little tinker i'm
not sure i might i might not be able to
come off the hoof with a good
answer for that but i think that's a
good catch-up
question to come back with it but i like
that one anyone so i'm just going to
grab a copy of that
and pop that is a good question
excellent so what let's start building
out that data model
don't place your pets on it though sorry
don't place any bets on it though
[Laughter]
yeah yeah this is straight do not do not
replacing any sports bets on the
basement
nothing that we say yeah will not be
held responsible
no okay
so i i'm thinking so
i'm thinking team might be a good node
here
yeah team is a good note let's let's
have a go
so let's do team
you need to i think you need to switch
your um your tap
we're still in there or maybe i'm not no
it's it's it's showing
yeah no it's how it's here okay perfect
cool i think it might be that this is
the great twitch lag
maybe so code
and they've got a name you know we had
like husky and it was it t
or a trh or something wasn't it
so you've got it got code and no
don't do that kind of name
so we had a team didn't we then the team
played a match
oh mike was hoping to make some quick
catch
i mean you can but don't don't blame us
if you don't make it
game id game underscore id
yeah it had a
has a yeah not do you want to date date
game basically
yeah stick to it we'll data we'll keep
it simple we can always iterate and
change it
yeah afterwards yeah so it has an id and
it had a venue
didn't it so where the match was played
so we could see if it was
it was uh venue
yep and so we'll keep it simple
for now
um so this is a couple of things i guess
where it gets interesting so let me just
put this in fernando we can
debate and figure out so this
has played
in
i don't know i think this will work this
will work this work so they played in a
match and then we had a bunch of
properties didn't we and then we can
debate if this is the
the right way to do it or not so
they played in a match they had a school
they had a start
elo and they had an envy low
okay so we have something like this
don't we so we have
i wanted to know about historical
results so we've got
team playing match so we're probably
going to have multiple so
the same team will have lots of
relationships coming our team let's not
just bashing my laptop won't worry about
that too much so we've got elo so we can
do
like minimax elos probability of
getting um results based on past
experiences
there's lots of ways we can do that but
i think we've captured the information
here to allow us
to do that we want to add points right
points yeah it's a score i think so
that's how many other score does the
that's the final result basically
there's quality points actually that's
less confusing isn't it
and then what we can do is we can infer
the final result based on the points
so for example say because obviously
you're going to have
you'll have two relationships coming
into match so they'll be the two teams
yes going into match and what we can do
is we can do career where we compare the
points and that's going to let us know
what the result was
so that's going to give us the results
it's going to give us the scores
we've got the ratings we've got the team
names we've got the
venue what we don't have in that data
set is locations i assume
there's more than one is there more than
one team per state oh goodness i have no
idea
it must be maybe i think it probably is
yeah
future episode future episode i'm going
to add that data and do it
okay i think we've got it's not perfect
but i think we've got a good enough data
model now
to to answer those questions that we're
looking at so
any other thoughts
bennu fire had a suggestion or a
question rather
played in will include home away as a
property is it better just spotting into
uh played home in played away in
yeah great question figure out who was
was the home home team
great question so
there are a couple of ways we can do
this so let's just quickly explore this
one so because we can do that
so we can figure out which one was the
home match by seeing whether
the team name matches the venue or team
code matches the value so that's one way
of telling us whether
it was whether they played home or away
the other thing we can do which is what
uh ben is um bennu is
mentioning is what we could do is we
could do something actually no get rid
of this
get rid of that we could do this can we
so we could do and then this becomes
played in
home or played home played away
i think we can pick the semantics and
then this one could be
played in a way we can do
that and then we have the same
properties
there are pros and cons for doing this
so the
pro for doing it this way is that
if i do this let's make it bigger no it
doesn't no so the the advantage of doing
it like this
is that we've got a quicker query
because we can now query by type so we
can like
pull back the query where if i wanted to
find out all of the teams
that had all of the away matches for a
particular team we could do it like this
and then i just used the query
another way i could do it in the
previous way was if i
check the venue to match the team code
that also
does it so you've got two options so i'm
going to suggest
for now that we keep it as just played
in
and i it's i think it's
it's choosing what's the friendliest
thing so
the intent is that we are going to write
up this stream as a blog post
so let me take a note of that bennu and
then we can
that's something we can discuss about
the modeling choices so
i'm going to propose for now let's keep
it simple i'm going to get rid of this
i'm going to keep it to played in
i will show you how we can do the find
all of the matches that were home
matches or away matches in our query
so let me do a question list out
home away matches as a query okay
cool right eo let's
go are we ready yes we are look there we
go
our database is running we've looked
at our data set we've thought about what
questions we want to
ask we've put together a simple data
model
let's load some data oh we've got a
question from mike about can we have
constraints a relationship in the
relationships in
aura so
you can't say if you if you mean mike by
locking down what relationship types you
can
i use i have to double check i need to
remind myself because i
believe you you can put constraints
on node labels
and what properties you attach to node
label let me double check that
for you mike i will get back to you on
that
okay so we've got our data model here so
let's load in some data
so very quickly we're going to use load
csv
so let's open up browser
so do you remember when i said keep a
copy of your password
yeah don't forget that because otherwise
basically you've all if you're joining
along
you you've pasted it somewhere sensible
or
if you're really organized you've put it
into your password
managing software
okay so let's let's have a look at the
data in aura so we're not loading it yet
to the database we're just gonna have a
quick peek so
and let's look at the first few rows
there we go there's our data look at
that
perfect and you see you see all the
you see all the fields we see it all
filtered out uh in
this slightly slightly different but but
basically the same
the same information we just saw earlier
in that in the csv file now is a
there's a split here for the first five
uh rows so we see that that's this game
we we looked at earlier
absolutely there we go we've got those
it's simple as so we've used
load csv i've not we'll say
we've not downloaded any data we are
just using that github link how cool is
that so
we're business nice with these public
data sets we can do that
yeah that makes it much more easier oh
i've just had a thought alex you know
what we need to do you know you can use
a google form to collect
data and then you can get the csv of the
back of
google yes yeah we need to do an episode
where we do that we get everyone who's
watching to
put in some questions yes
yeah that's a good idea we can have some
open
uh some open tags and then we just
everybody fills in
and then we have a small little twitch
viewer
set we can then put in yeah
that's a good idea actually i'm not
gonna bother putting any indexes in this
is quite a single data set it should be
fine
famous last words all right let's let's
add some data in here
so we are going to
create teams we're going to use merge ah
another good reason for just keeping it
as played in rather than
uh played in a row playing he's like i
can just be really lazy with the stuff
that i create now because now what i can
do
i don't have to differentiate between if
it was an away team
or a home team i can use exactly the
same
as the create merge statement that i'm
about to do and i can just
blindly dump it into the database so i
can
so it means i can be really lazy there's
one advantage to sticking with this
model for now it'll all make sense in a
second
so where are we here we go so this this
allows lou to be really lazy
yay lizzy
so team and what did we say we said
we've got
codes and code
was what did we call it we called it
a teamwork teammate team underscore id
yep
victory road or team id
so what's probably worth mentioning as
well what we want to do
is with row
where
ro dot we said was it duplicate wasn't
it
is copy equals
zero so the reason why we're doing this
if you recall we noticed how we had
these these rows repeat and the ids
repeat and we've got and each row
basically does it from the perspective
of the home team and the perspective of
the away team
so each one does the perspective each
team so on it
to allow me to maximize my laziness i am
only interested
in the his copy is zero and then i'm
just gonna do
two merge statements so one for each
team and then i'm gonna
hook them together so
maximum laziness here so that's what i'm
doing in there
so we're going to do the home team so
let's do i should do let's do
um ht for home team so
code is that and then
it shouldn't matter but we're going to
we're going we're going to practice do
good practice
so we're going to do on create
oncreate i think it is h t
dot uh name
which equal to ht
updates row dot fran id
so what we're doing here is what we're
saying is
uh it is good practice when you're doing
merge
that you don't put all of your
properties in
when you're doing a merge because what
merge does it goes away and if something
doesn't exist in the database it's going
to go off and create it and if it does
exist it behaves like a match
and as a result merge does weird and
wonderful things so basically everything
to the right of merge is treated like
matching a pattern so if everything's
not exactly the same
it will go out it doesn't exist and it
goes off and creates a new one
so best best practice is use your unique
identifier
for your merge and then if you're
creating something
then golf and do a bunch of things if
you want it to create
um do a bunch of crates or things if
it's a match then you can do on match
and then do stuff
so this is good practice here is to just
merging your unique identifier
then add any properties if on the create
so that's what's happening here for our
home team
and i'm going to do the same for our
waiting
for 18 and
their code is row
dots what did we say their
pop id yeah
sweet okay and same idea
we're going to be good citizens we only
do the merge on the unique identifier
and then we're going to do away
team.name is equal to
row.okram
yep i'll just copy it
okay right okay so we've created our
teams now we need to connect them to a
match
don't we so we're gonna do a
create a
match so that's gonna be um
match and because we're doing a create
we can dump all the properties in here
because create doesn't check to see
whether something exists already it just
goes
so i like to use these high-tech terms
you see
so in our match we've got an id a date
and a venue
so very quickly so we've got an id so
where is it so it's a game id here so
remember we said we've got the date
and the code so the sharp ride amongst
you
may have spotted that we don't actually
have a venue code in here the only thing
we've got
is game location h
now if you remember all of our is copy
zero always refers to the
home home team home venue
so we can cheat slightly and we're going
to basically say
that the the
uh row.team id is our venue for the
match
hopefully that makes sense if it doesn't
give us a shout
okay so so we have
the id so id is going to be
our row dot
game id our venue
venue is going to be our
row.team id
and what else did we have in here
great so our date is
in here thank you very much
so we will need to do something to the
date
but we'll show you how we do that
afterwards we're gonna we'll do the
processing later
so the date is gonna be as you said alex
it's
row.bait game and notice
it is month day year
just in case uh yeah that's the us way
so what we could do as well is we could
cheat
and pull out this another cheat we could
have done
actually let's do the the proper way for
doing the venue so we've got the dates i
i
said that we could pull the date from
the
the home team but the other thing we
could have done as well is we could do a
bit of string manipulation
and what we can say is we can say the
venue comes from the
the game id so if i do write
row.game like oh
what happened there game id three
so what right does right is a string
function and it basically says
give me the n number of characters from
the right hand side
of the string so here it's going to take
the three so again three it's going to
pull the the three right characters from
gram id which is going to give us the
venue
so that's the other way of doing it's
the same as the home team but
we do like that and then you know in
case something strange happens it's all
good
so that's creating our game
and then we want to hook all of that
together so if i'm just going to do it
with
home team away team and the match we're
then going to connect them all together
or is that in the where did we put that
sorry i think we put that in the
relationship yeah never mind
that is coming it's coming it's coming
bro good point i need to remember wrote
let's do
pretty good citizens here so let's do
row
dots
did we say is it score isn't it an op
score
oh and elo and all sorts right let's do
this we're just going to pull out bits
so that we're a bit more efficient with
memory
so we want oh it's points isn't it so we
said point so
row dot puts as
home points row is it octets i believe
it is
uh let me quickly check
excellent and then we've got a bunch of
velos as well don't we oh this is going
to get
this is going to be so many lines i
apologize in advance
so we have got uh ro dot
let's let's start with the homie lose so
elo
i i think is initial
i mean you can tell because the n is
like what was after so elo
i is going to be
home start hilo row dot
elo n is equal to
home and elo and then i think we just
add hop in front of everything don't we
row dot yeah exactly
underscore i and up underscore elo and
let's go in
thank you very much so it's going to be
it's going to complain
[Music]
as there's a way to start elo
underscore and a way and
hello okay we've got everything we now
need here for our relationships
hopefully it's fine we can always
correct the query if
it all goes horribly wrong we may need
to put some indexes in but
we'll do that in a bit we'll test to see
what happens it doesn't hurt to
throw out a few errors keeps it exciting
doesn't it
right so we've got create home team
and they played a match didn't they say
played
in and we can now put in our information
here so we
had points which will be home points
we have got star elo which is going to
be
our home star elo and we had an envelope
which is going to be our home end elo
so they played in the match and then we
go the other way around
we can do it like this can't we um
we can click and see what's going on we
can put the other side of that pattern
which would be
this and i'm just gonna horrifically
cheat and just replace
h with a what could possibly ever go
wrong with
absolutely nothing flawless we'll see
all right we're all now going to cross
our fingers and hope that this works
here goes nothing
the first hurdle it's all good it's all
good
right what did we do wrong
valid input ht expected set yeah yeah
yeah i forgot the set so set is what we
do for setting properties so
my bad concrete set
and that sets new properties okay
oh oh i forgot to remove my return
apart from that with perfect
hey right hopefully so something to bear
in mind
with all of three is it does have a
very small allocated memory in csv
so okay no so i've put something wrong
here because it says no changes
no record so i've done a boo-boo
somewhere here so let me have a look
where i've done this
i'm just gonna grab that and let's do
return row limit
it's a string it's a string
hey okay there we go right so let's go
back to our previous
query so something to bear in mind
actually we can get rid of this can't we
just make it
look a bit tidy up so something for you
all to bear in mind is that all of this
is coming back as a string so sometimes
i've pin here as an integer
but actually this is being recorded as a
string so we'll show you how to change
the type of properties
in a second so that'll be useful when
we're doing the points but for now let's
load that data
okay i think it looks good
it looks good hopefully it's it's all
gonna work well so we'll give that a
little while it shouldn't take too long
it would have been a bit faster but
oh dear oh oh no
there's too many nodes well that's
we can limit that i guess we can we can
so
let me
let me see what we can let's just
quickly
because i did have a quick peek earlier
and i thought we were okay with this
so
so merging the home team on the id
i'm so happy yeah
thank you mike oh i love it
i love it let's just do a quick let's
just quickly see
how many i know this is probably perhaps
not the best way to do number counts but
wait it's fun how many rows do we
actually have here i'm intrigued
so i'm just gonna do return
count start so what this is going to do
is it's going to tell us how many match
notes we've got in this data set
survey says ah there we go
it's it was the match nodes there is i
can't believe that there's 63
000 match nodes in there that's insane
actually yeah well it's if you look at
it from
1946 uh till
2015 yeah it's um yeah
they go 63 okay so that was scuppering
us
so how do we want to do this do we want
to do the
i just did historical matches yeah if we
let forget about the modern era we don't
care about the modern era
so what we're going to do some people
care about the modern era
uh okay so let's do this so what we're
going to do is we're going to put in
another where clause here so
uh let's do like this so let's do and
how do we want to do this
should we limit to a certain year
up until i don't know
1980 or something oh i like you thinking
let's do that let's do that so
we need to do a bit of cheating in this
so let's just quickly remind ourselves
of the data here so do we have something
we can in
oh yes we can do it in the year can't we
we can intify the year
so let's go up to let's keep it up to
we got to 2000 what happens do we reach
50 000 nodes but time we hit 2 000.
oh perfect let's do that
up to um so everything before the year
2000
sounds like a plan so we're gonna do
this is a little bit wasteful but it's
all good so let's say
two in to joe or is it to end i think
it's
did we say yeah
so that's actually a good question from
uh n1
why just not limit to 50 000 i mean
by putting a limit at the end of the
query
so we don't actually if we could limit
i know good point actually so
you know what we can do that it's not
going to be perfect i think it's going
to end up with about
24 in a bittish or 25 000
matches which is fine for the purposes
of that so yeah no good that because we
do
we do have a where clause here so we
could do
a limit with our width so let's do
limits
50 000 yeah why not uh
i'm going to make it 49 000 because
we've also got teams in there as well
okay let's see that let's see that good
good point well made
all right did it load some data to begin
with no it did not okay
cool all right let's do this
oh oh oh what did i put in there
oh okay
is so this way around
oh and then the chat's going to crack
there we go yeah i put the limit in the
wrong place
yeah thanks anyone oh hey look at that
we got some data in
excellent all right so we've only got we
haven't got huge numbers i think what's
happening because the limit
applies to the first part and remember
we've got those duplicating rows so
maybe we could have doubled that and
done it to
98 000 but you will get the idea you can
you can have a
you can have a play play playblade right
okay we got us some data so let's have a
look at how much data you've got so if
we do
match uh
yes the video will be you'll be able to
watch this video i think it goes
straight to youtube after we're done
doesn't it
it should go straight into youtube yeah
you will be able to watch it um
basically whenever yeah so let's do
let's have a look at what we've got so
we've got
labels and and count
star so this is going to tell us what
we've got in here so you can see we've
got 87
teams in our data and we have
got twenty four thousand five hundred
matches so we've got some data in you
can see how many teams you've got and if
we do call
actually i'm going to index your
searches i'm gonna bring this back in
really
i kind of remember we'll find out is it
going to give us a visual i'll say oh it
does look there we go so there's our
model look at that team played
right exactly what we wanted let's do
this let's
see some questions so you wanted to say
what was one of the questions historic
results about
huskies and nyx was one wasn't it yeah
that's an example exactly
between two teams yeah between two teams
yeah that's it so
uh we can i think this we can find that
here so we know it's
that's tr for huskies and nyk for nick
so let's do that so let's find out some
let's see what the rivalry was like so
uh very quickly you know i talked about
the
the
oh let's pull back some played in so if
you recall
we said that it's going to store things
as strings so it's not so obvious here
about points and the elo
being strings but if i go to table you
will see
that the
points you see they've been wrapped in
strings so it's something easy for us to
compare it to so let's very quickly
check change those let's turn those into
uh integers so what we can do is we can
do sets
r dot points
is equal to int
r dot points so that's gonna set those
as an
integer and then we can do the same with
the elos r dot star
elo is equal to two and that's float
i think it's the float it will complain
at me if i've got the wrong one
start elo and you can see how very
quickly we could have done this on the
load but we can also do it here as well
it's all good
and elo for those floats
oh dots and that's going to go away
and just oh
integer
okay so that's just going to go away and
just
get them back to what we want so
let's check out these rivalries so let's
do match
we wanted to do huskies and we wanted to
do
the next so let's match uh
team one team
that's gonna be trh
thank you very much and we're going to
do
team 2 team
new york knicks that's my the level of
my extended
yes i think so then it's going to be
one if we do this we'll start with this
one to begin with so let's do
and i'm just gonna be really lazy and
just do this
super inefficient queries so if we do t1
match
t2 and then what we can do to begin with
is we can return
the let's return the number of matches
they've done so let's do return
counts and so this is going to tell us
how many times
oh did i
um
lsd
oh i forgot to i just did like this
i think it's another comma after match
maybe yeah yeah yeah yeah yeah
all right so they've played six times so
we can bring up both matches
as well so let's let's expand out this
query so let's do
r1
[Music]
r2 so what we can do here is let's
expand this a little bit and just find
out what happened so if we do
so we know that t1 so let's say what
were the scores so let's do t1 dot
oh let's do name let's let's let's push
the light out
t2.frame let's see what the scores were
so we can do our r1 dot points
or two dot points and we can see where
the venue was so let's
say m dot venue venue
so where did they play there we go so we
can see
yeah and let's let's expand this a
little bit further so what we could do
is uh we can say did
you know did the huskies win against the
knicks so let's
what we can do i think we can do just
this so we can do
it's great to learn that and i think
that should return a true or false
as
hey look at that so now yeah see how
exciting to build these things up so you
can see what happens
so now then we can let's build on this a
little bit more
and let's do how many times did the
huskies beat
the knicks so we can do
ah
i think if we do counts
just trying to think how to do this ah
we'll get um i'll have to have a little
thing about that but anyway you get the
idea of doing that because i think we
we've just hit the hour so let's squeeze
in a couple more queries but you get the
idea of how we're
building this out yeah i can answer
those questions
so i wanted to know about min max elo
rating so
this is a little bit more contrived but
let's do
uh match
t1 or just t team
and just i'm just being really lazy here
i'm not you should put relationship
types in but i'm just being
lazy so team played in a match
and then what i want to know is i want
to know the team name
t dot name oh with
t dot name uh
min t dot uh sorry r dot
nd low we want so that we said was
uh nd low wasn't it
as uh lowest elo
and max are the you know
and lilo as
highest lilo
and i think if we do return
return name
oops sorry my keyboard being a bit funny
so with
name lowest
below highest melo
it's going to be
the highest elo minus
lowest elo that's difficult to return
the name
lowest elo highest elo
griff elo order by diff elo
descending so what that's going to do is
it's going to find out what's the
minimum elo team ever had the maximum
elo
ever had what's the difference between
those two elo scores and then i want to
order the teams by the highest elo to
the lowest elo so hopefully this is
going to work
hey there we go
so based on unlimited data
based on our limited data set those are
so we've got sixes
i've had the biggest range difference
between elo there
so that gives you an idea of like
improving so obviously there's lots of
caveats here we don't know how that's
changed though
exactly i just wanted to say if we if we
if we put in here's we'd know
we would know when each score was yeah
but yeah
this is an absolutely basic basic basis
yeah
so we would know uh depending on if they
if the sixers grew
from 1160 to 70 76 or if they actually
dropped from 1776 to
1160 we don't know a very
good point so we can have a bit of a
play of the year so fun one might be to
see that the biggest improvers
so that's uh that that's one for uh
we'll have a little think about what
that query would look like i can't it's
off the top of my head i need a bit of
the thinking time
so let's squeeze one can we squeeze one
more query in that we had
i think we can i think we can for sure
let's have a look what we had
so
list out home away matches so
yeah let's do that so very quickly i
know one question i think that was asked
was the modelling decisions and how can
we tell
the matches are so what we can do is
let's let's let's take the sixers for
example
and let's find out how we'd list out all
of their home matches so what we can do
is if we do uh
match i'm gonna write it just i'm just
gonna chuck it all out into one query so
let's do
t team and we're gonna do it let's go to
name this time because we want the sixes
i don't know what their code is let's do
six
uh oh sixes robin sizes
it says uh i played in a match didn't
they and that wasn't a match
and what we can say uh
end where venue is equal to t dot code
this is going to pull back
all of the home matches for the sixers
and then what we can do now
is let's find out who they played
against so let's do
match t actually let's do
match um
and what we're going to do here is do a
t away so that's going to be the team
that they're playing oh
opponent team let's do that against
their opponent
and that's team and we're going to say
where m is sorry
op it's not equal to
our sixers and then let's return some
beta
so let's return the whole matches so we
know it's the sixers so they played
against
so let's do op dot name as
played
faint and we can say what this
played against do that
and if i put in
it's t
um
against the result let's do
let's do r dot
points uh i think we concatenate with a
plus
if not it will get sworn out other
browsers it's all good
do my error checking with the browser i
think it's either plus or amazon i can
never remember
we'll find out shortly
as school
right let's see what happens
there we go nice
there we go so those are all of the
home matches and there's a lot of home
matches there but sixes played a lot of
home matches didn't they
that makes sense actually yeah because
there's day seven teams
more or less and then we've got we still
got what 50 odd years of matches so 50
times
70 yeah it's right back in ballpark
there we go so we've got all of their
so there you go these are all the people
that they've played against
and what was the score so let's add a
little bit more in there so let's put
the date in there as well
so let's put in whoops
uh end.rate
that's great so let's just expand let's
make it a bit pretty fine so right so
obviously we need to sort by date here
but anyway you get the idea so that's
where we can have a look at the the
various
uh home matches that the sixers have
played and what the score was
so i think we've we're a little bit over
our prediction on every game previous
game so
anyone a brilliant question really
really useful question
let us have a think about that and maybe
maybe we do an
mba part two where we come back and
answer some of those questions or we
will
follow it up in the blog post so
absolutely there's a real value around
that and i know
mark neden put together a blog post on
the greatest of all time
on tennis players so maybe we can steal
some queries from there
and also look at that and we can because
the thing is lots of things here because
maybe we can do things like historical
like
how did somebody do when they played
against
teams in the past you know do they is
there a trend there
is there a factor of the elo rating so
does their elo predict how likely they
are to win so
let us have a little think about that
offline and we'll come back
with response on that but other than
that
wait we had some fun did we know we had
some fun yeah and that's a cool data set
i think that is
with the historic uh matches and the
the the insights it's good fun and
fairly and they like you like you're
also
very easy to explore fairly easy to
start things with with the
um fifth neo4j graph that are based on
aura so you know
everybody yeah can do it have a go
have a go you've got all the links there
we'll we'll update
this video description for those of you
who watching this are going to be
watching this again
we'll update all the various links in
the descriptions don't worry you don't
have to be sitting there trying to
type them out and have a play
and hopefully mike was still we still
more drama than cat video
i will be back next week we will exactly
we will be back next week
uh have a good week you all and uh hope
to see you
next time thank you for joining today
thank you for joining
have fun with aura free let us know what
you got up to
and we'll see you all later exactly take
care bye