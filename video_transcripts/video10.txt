so
trying the life thing just to see if
everything works let's see
um
which seems to be okay people
and youtube
super
cool
uh welcome everyone
uh we start in one minute if you haven't
created your
aura instance yet please do so that you
can
come along
i'm sorry for the leaf blower man
outside that's kind of the common theme
if you're doing live streams like either
lawn mowing or construction going on all
of the floors or things like that so
that's
common things uh
let me know where you're watching from
uh so i'm always interested in seeing
they're coming from heidi
[Music]
shanghai
so where you're coming from i'm in
germany right now we had elections
yesterday
which was very nerve-wracking
and let's see what this holds for the
future of the country
hey andrew
hello to taiwan
good to see you all
so
okay
i think without further ado we want to
cover quite a bunch of things today
so let's go i'm gonna share my screen
and then
let's see that we can
get going
i'll try to check the chat uh every now
and then uh to see if there's anything
that you want to know
feel free to ask in between what you
want to know and then we'll get from go
from there
okay
sharing my screen now
um
yes
okay
switch this one
perfect
um
perfect recursion
super so
before we get started um
just to let you know if you haven't
created your aura instance yet so neo4j
aura is neo4j management cloud
you don't need to take care of
updates administrations management
backups things like that it's all done
for you
and fortunately for all of us you can
get started for free so there's some
rf perpetual or free instance that you
can use for instance
to experiment with some data getting
started with neo4j learning neo4j
building your small uh
graph project
uh building graphql apis uh connecting
with spring data neo4j with python with
network javascript whatever you want
um i'll show you in a second and you
basically log in to aura just use a zone
of zero account so you can log in with
um
with google or um other of your
providers and then or with via email
then you have to confirm your email
so and if you've done that then you
basically
get to this ui when you're logged in you
don't have to put in credit card or
anything uh you can just get going and
say create database and then you say or
free and i say my database name is g dot
project
i don't want to have iowa i want to have
belgium and i want to create a blank
database and i'm going to click on
create 3db
uh then it shows me my password that i
should remember so please copy it and
put it into some safe place
uh because if you don't have it uh you
need to either pre-create a database or
contact support to accept your
your password
uh but for the free instance it's easier
to just recreate the database um
so if i do this uh i don't for this demo
i don't do it no
um
it says creating a database and this
takes roughly 10 minutes last time i
checked which was on friday
um
so it takes about that's why i already
pre-created my other database uh to not
have to wait but if you do it now then
in 10 minutes you should be ready to
go
and continue with us
so today we want to look at the gdel
data what is gdelt
digital project
is a
large effort that basically
um
scrapes and accesses and collects all
the news from around the planet
it's basically
takes
several hundred new sources from around
the planet
units newspapers publications journals
and things like that
it ingests all the news and then also
analyzes the text so it extracts
entities in people and locations and
places and organizations and all these
kind of things in lots of different
languages
and then makes them all available uh
for for users to
use right so you can
do all kinds of stuff with this data
it's very comprehensive so today we are
only looking at a small subset and a
simple version of the data but if you
want to dive into it there's a lot of
stuff that you can do deeper in the data
okay so this data is available there's
lots of information in here um so
there's an event feed
basically of news events that are coming
in
that's one aspect
um
and then there's also because they
extract all these entities uh you can
also do a knowledge graph out of the
data so basically there's also an
global knowledge graph
which gets all the entities and and uh
even emotional analysis in india
so there's a lot of
data if you want to export this further
there's also like an
google uh
bigquery endpoint that you can query for
the data so it's very comprehensive but
we won't go into the all adapt in there
today
but if you're interested uh there's a
lot of stuff in here right so uh it's an
endless source of good information good
data
uh especially if you look interested in
uh global news politics uh economy
ngo like topics and uh and and so on
right uh they also started to look at um
analyzing images that are uh provided
with the news so it actually extracts
additional labels and text for the news
from the image of the dash unit as well
so there's a lot of stuff in here um
including
downloads of data sets 2.5 terabytes or
querying the database or analysis
services which are pre
pre-can services for
certain usages and some users
um
so that's all good and um
what i want to look at today is the uh
rest api because you also have a rest
api
uh which is quite nice unfortunately
there's not too much documentation on
the rest api so i basically googled for
it
and then found
the
uh found this blog post which announces
the rest api
and in the blog post there are a bunch
of quick start examples uh as well
uh there's also a documentation page i
just need to
uh here now it's also on this page um so
it's all in the blog post basically uh
so there's a bunch of examples so you
can basically click on any of these
examples and then get something for
instance you can get an um
html page with news rendered oops
uh
this one
with news rendered on the fly
on a
on a map for instance so for instance if
i
today i want to look at elections if i
look at elections then
there's
these news on collections basically but
asian news
and
so this is an html endpoint but it also
has endpoints in
um
endpoints in json and csv and then other
formats as well and you can get
point data um you can get image data
and other things as well
okay uh please let me know in the chat
if there's anything any questions or
anything that you want to know so this
is basically uh the page i'll also put
it into the chat uh so you can see it
here
if you want to follow along i also
updated the
github repository
with the links so you can also find the
link in the github repository
to come along
and
so this is what we're gonna use so uh
basically
uh what we're gonna do is kind of use
the um
uh the the rest api to access the data
and then turn it into a graph if you
want to have a look at
what data looks like
you can actually
use this json
api endpoint here to just have an
example so you see
so there's geojson
[Music]
so if you use json feed not geojson but
um
and you get basically entries of one use
item per
per object
let's see and then
it
hopefully come on
um
so in adjacent feet you have the items
with
ul
image id image url
um
title
and content text is empty here but
unfortunately in this json feed data
there's no
location data so there's no latitude
longitude in there which is unfortunate
right and that was the reason why i
looked at the csv data
so if i change json feed here to
cxv
it downloads the csv here and if i look
at this
csv
then
you see
that it has
location
how many results came from this location
latitude longitude url
image url
and title in here
right so it at least has the latitude
shoot information as well that's what i
wanted to access uh in my new video
instance
okay um so if you have created uh your
neo4j databases it should look like this
and then you can just say open with your
browser
and hopefully you copied your password
somewhere
uh because you need to
when you open it with neo4j process you
need to log into using neo4j and then
you put in your password that you copied
so we now have 11 minutes which
hopefully got give you enough time to
to get your database created
and what i want to do first is i want to
use this api endpoint
and look at the data that we get from
this
so that we can also then look at what
would our data model or what could our
data model look like data model is not
too too difficult but i just wanted to
have a look at this so what do we have
so we have one topic in this case it's
elections
and then we have to follow following
things with the title image url and url
that's kind of the news item
the latitude and longitude of the news
as well and the location which is kind
of here the higher level location on the
country level
yes also we could also change this to
adm 1
which is the administrative
thing
and run this again
then sometimes we get some more detailed
information but it's not really clear
when you get more detailed information
so sometimes you get a city sometimes
you get an um
sometimes you get an estate
and and sometimes you get these kind of
interesting um combinations uh which is
basically uh and russia 48
whatever admit administration unit so
you need to resolve this yourself so
which is also not so helpful so that's
why i stayed with the country i think
you can also put in city if i'm not
mistaken but i'm not 100 sure
let's do something with city
so there's also a version where you get
out here comma separated but then you
don't know basically
what is what right so this is most
called english spelling muscular um the
kind of russian spelling but it could be
also the
um the state and then the country
so it's not really 100 clear um
what it is uh and i didn't want to spend
too much time on analyzing this kind of
location streams that that's why i just
used
country for the time being
what we're doing here accessing the api
uh so this is the api url uh
with this topic so we just said this
elections is my variable name for for
topic and i just pass into topic key
into the string and use load csv with
headers
from this api which loads out csv and
returns each row as a as a map or object
or dictionary whatever you call it right
so and then we have all this key value
key value key value and now we can use
this key value object per row to turn it
into a graph right
and to look at the data model
i
use
arrows which is a nice
graph drawing
let me just delete this
um let's go graph drawing at the wheel
just at the node which is our
topic
and then we have
from the topic
we would say we have news
and the topic has a property of
name
is string
and our news
this is kind of a public relationship
point from the news to the topic
and then you use itself we have the
url which is a string we have the title
which is the string
we have the image
ql which is a string
and the location which
and then the other thing that i want to
do i want to also point the news to a
country
and um the country
has a name
which is something and it has a new
location which is a point
right so this is kind of my simple graph
model that i want to use today and then
uh
relationship and then there's this other
this video that you might have
remembered which is not in the json but
in this csv which is
here's my browser here
which is location result column so this
is for this topic for this location so
for this country
and for this uh yeah for this country
this is my result account so what i can
say is basically
i can
say
between the topic and the country i can
create another relationship
like this
and call it results
and
probably reverse the relationship
and say on this
i can have a count
property
which is an integer
[Applause]
so then that's also a means where per
topic i can score how many results i got
from the country as such because if you
look at the data here but if we get back
it's always the same same current per
country so this is russia and it's
always 9522
from from
russia
right so we can
it's always the same for location
cool
just let me know if you have any
questions so this is kind of our um
our domain model let's take a screenshot
of that
so i can add it later to google
um
so this is what we want to do we want to
create a topic new note in our graph we
want to create a news node in our graph
and we want to create a country node on
our graph based on our data
and um
and use that
for
our so
let's do this incrementally so what we
can do is basically
reload our data
let's see how we do this
um
so
so this is currently our existing
results that you get right so in each of
these rows you can access all the
um elements so we can for instance say
row dot
title row dot
uh
location
so this is an example where we either
return these objects or dictionaries
here
or we can access individual properties
and return them
as well
so
right so you see
our title our location location site
code and url
what we could also do here is we could
aggregate per location outside so we can
also say
um
return road of location and
that's
c and then just
order by
c
descending so gets everything from that
url
for seven days right so this is here the
time spent
spend uh seven days
and then you can access this and
then say okay
how many news did i get per location uh
so for
10 for sweden 10 chilean
and then
dominican republic montenegro
and so on
that many news i got per country
um
so we can
already work with the data from the api
directly but of course what we want to
do is now we want to create our our
graph data from this right so
let me just copy this up here
and then what we can do will for
instance we can start with our topic
note right so we can say
topic
name
is topic so this is a note that you
create and then you say return
that means
just the request
looks at a topic
and then if the topic does not exist
because merge doesn't get upgrade so if
the topic already exists it just returns
the topic if the topic does not yet
exist
then
it would create it right so which is
pretty straightforward so it just
creates the topic
um it takes a bit because it just takes
all the data uh in and this is our
elections topic right so this is
currently a lonely node not connected to
anything and um so we need to do
something about this
so the next thing that we would do is uh
create a news
uh so we'd say we create the news and
um attention url
which is row dot url right so the url is
our unique key for the for the news item
and we we just merge views on that
so the news is now also a single node
but of course you also want to connect
it to a topic
so we say um
this news has a topic relationship
to t and so we basically create the news
node which is kind of a second node here
and then we connect it to a topic via
topic relationship to t
and because you use merge here you can
run the statement timing again and if
the data is already there it will not be
created
if we had used
the great clause here then it would have
credit data time and again which you
don't want right
so uh so we return
t and
relationship
so let's try this
so now we should create quite a lot of
data
uh so if you look at the table view here
it also tells us
come
that's probably a on bit too much for
the browser
to random
okay it said
it created 1.24 notes
here
it created 1024 nodes and
that's many relationships
right
with the properties that we set yes you
are dropped here property
so now i can actually in my graph
over here
can see the data
as well
popping up
uh so if i go click on this database i
can hear then
i
one second
i think my computer is a little bit
overloaded by streaming and
i'm showing this stuff as well so i have
topic node after the news notes and
it's 1025 notes and 100 and 1024 news
notes and it's our topic relationship
right
so
um let me just
do this
okay
just get rid of this one
okay
cool uh so we can also adjust it to
encount
uh
so that we know how many rows have been
processed completely here
1173 euros
there might have been some duplicates so
we got only 124
um
okay no questions so far um so the next
things that you want to do is add
additional property to the news
uh i'll just steal this from the
um
from the github repo so we'll look at
this in a second
um
so there's an oncreate
course connected to merge so whenever it
creates the
news it would set this but what you
already have created is we just uh
change it to set that mergers
and the news and i just saw there's a
typo in there there's a dot missing
with another title so if you
fix this immediately
okay
uh so it's creates the news it sets the
title from the uh from the csv
it creates the location
as a point object so neo4j has special
data type so you can do special indexes
and distance computations and things
like that
um
so it creates a point data type from the
latitude and longitude
please remember that usually from csv
you get strings only
right so if i if i download this here
again
so you see all of these are strings
right so the
because that card is string like
so that's something that you need to uh
watch out for uh so you need to convert
the strings basically into floats so to
create a proper point object
and then the image url as well so if i
run this again
then our mute items will get
added
the other properties so if i click on
news now you see now our news item has
a location
and title and then url as well
right
so
okay
the image is empty
because some of those don't have images
but if if you want to see these news
then you can adjust about you click on
these and then it opens up the actual
news
so this also gives you the means to
build an app that then does something
with the
50 data as well
okay
so the next thing that we want to do is
basically create a country uh so which
is as you can imagine quite similar
so because we have
a country uh note
sorry a country level data here
you can say road location is our country
right and then we
connect the needs
to this country
so
so this will be a little bit more
interesting
now and the other thing that i wanted to
do is uh only create that
when i create a country for the first
time i just want to
steal the location from the news
basically here
the first time i create a country i want
to kind of set roughly the location from
values or so that i cannot get
the country as well
around this again
i get no country notes
here
and if i look at this i see all these
country notes and now i can say okay for
instance let's say for me for germany
likes pontius
i have uh these news
and what's interesting these are
actually not in german
but they are um
probably related to the country so it's
not
necessarily what the uh
where the location uh sorry
what in news is about but uh sorry where
the news was
hosting the country but
which country the news is about as such
right
um
which is interesting
so for instance here's iran once again
look this up while if you say um
something like
china
you see these news
so you see also
russian and arab news and i think korean
news
um as such
and so you have
all the different
um
countries where we have gotten used for
okay and the last thing that we wanted
to create is basically this beside count
which we
basically say
we just create a relationship
uh
called results uh between the topic and
the country
and then turn this into the result
uh field
or putting this out beside confused on
this one so that means
the from the topic for the country we
create a results relationship
and uh set the
current on this results relationship to
the location of that account
right
so and this is then our whole data set
and
we can start to explore this in other
ways right so currently you have an one
topic elections but now we are now that
you have the statement here to create
all our data
we can also say okay
we don't just want to have this for
elections but we want to have this for
instance uh let's say for
climate
for
usa
for
china for instance
taiwan
and then we want to do for instance
another one for
and now we have just one topic for each
of these topics
and now we can also see what's in the
overlap often use over those right so
are there for instance now we can ask
okay are there any news
uh are related to more than one of those
uh topics so i'm not sure if that works
but what we can do is basically we can
say
some of those
let's see
if you look at the
relationship
this is the elections one
that's probably
let's see if you can reach topics you
can get
[Applause]
um
for each topic
we get
all the news and we only want to have
six types
upon 10 per topic
right
actually it's not between use but what
you can do actually you can assign this
to a path
and
the whole expression topic to use with
the relationship and then
you just get them into a connection and
take 10
of them
the first ten uh from this collection so
we get for each topic
we take all the paths here and then we
just pick the top first ten
entertainment
okay and i probably did one direction
if you now look at our graph here you
see each of the topics
and then the news related to that
right
so uh probably
i think it might not be so much overlap
i just realized practitioner
should add vaccine as another
topic here that you want to pull
so now what we can do is actually
uh to say
if we want to have um
nudes that spend two topics we can just
express this into a graph pattern so for
instance we can say
we have the topic to the news that you
just see so here but then we want to
also uh see this needs in another topic
right so i want to have mutes that are
spanning uh two problems and then we
function our path again which kind of
covers
all three nodes and two relationships
and
let's say
let's see if we got some news which is
very topic ah yeah
it's actually quite nice alright to see
right so we have topics
that um
cover climate in us so for instance he
fails warm waters
vaccine and climate
uh the extreme force
and
reinforce
both
vaccine related and also climate with
the
trillium tree campaign pledge from
mark van gaal
caribbean
have
covert and climate
topics at the same time elections
germany
climate because we had a climate
election basically uh greta
was here in berlin
for effenberg
so these are the news about this
but so you see that yeah
news covering multiple topics or
um
china and elections and then china and
climate right so i think
the chinese government announced that
they don't want to
build called
coal plants outside
anymore
from now on so there's
covering multiple topics and this is
basically one of the powers of the
graphs that live with a single
expression you can busy explore uh
more
complex structures
and such but it's actually a really nice
let me take a screenshot of this one
today
right so and uh so this is really just
scratching scratching the surface uh i'm
a little bit sad that this api does not
return any
of the enhanced nlp entity extraction
data
but i couldn't find any way of
from that api getting ntt data so you
can
provide time spreads and images and
point in information and heat map things
and and and so on
um
but um
there was no
uh
means to get any um
entity data which is a little bit sad so
i couldn't find any entity
npt data
in here
um but the other api so for instance if
you connect to a google query and
extract the data from there then you get
all the entity data but it also gets
more complex because it's a lot of um
classification and so you have to
introduce several levels of
of data to get into that so that's
that's why i'm
not covering this uh today here
okay
um i think that's almost it what i
wanted to show today uh any questions
from any of you um
any topic uh recommendations what topics
we could query for uh from gdelt
uh so we had a bunch of interesting
topics already
but i think if you have any ideas what
else we can perform but basically what i
wanted to show you is kind of how to get
started with neo4j or free
how to connect to your database
and uh how to get
your
data visualized
and queried a little bit of course if i
wanted to now create what we said before
for instance i want to see
um per country how many news have been
there then i can get to 20 countries and
say for instance i want to return the
size of
how many country relationships are there
right so i would return country name
i would match all the countries in my
graph so match uh find the pattern
underground in this case my countries i
return the country name and then
how many relationships does country have
from
with this type
it's kind of the degree uh
the degree of the country right so um
and if i didn't put the direction
in the wrong
direction then i can say actually
[Applause]
[Music]
[Applause]
um news console most of them use are
about mexico children lebanon argentina
so and then i can also drill down into
those uh if i wanted to so if i if i for
instance say
and files if i don't return to that name
but the whole country node i have two
options i can look at that either at the
tabular option here
oh this is really nice now i can copy
and paste
things to the clipboard that's cool so
that's in your feature okay
so that i can copy these elements
i'm not sure why it's not possible for
all of them but it's actually at least
good stuff in the right direction and
now i have my top five countries here
and now i could explore it and say
kind of what news are there about
argentina and things right so and then
can you see
okay
uh these are all the news about
argentina
and
like covet updates
what else do we have here
more kobe
cuba
fellow stars champion peace
so there's quite a lot of different
news as you always can see from the
topics
quite a lot of different news for from
argentina as such
right
and what you can also do is basically to
say
okay if i have certain titles or so i
could also say i use them to pull more
news right so what i can do here
is also to say
fighting all the news
and um and what's a little bit
unfortunate as well in this api that
doesn't tell me the language so i don't
have any um
information what language this is in
which is a little unfortunate uh because
that would be nice if i had the means to
do that
but what i could do here is i can
basically take the title
so what i can do is i can take the title
and uh
split it on space for instance right
way too lower
um
lowercase explains split it on on space
or i could even split it on rec x
with a custom function
um
[Music]
which is
epoch
i could split on non
word characters basically
um
as worked
then i can
take all the words
and return me for instance the top let's
see 100 looks
right
so if this works
[Music]
and don't have too much
let's see if this works
so and it seems that
or descending we're not assuming all of
the crosstalk descending
um
of course these are the short words
which you could filter out
let's do this
is greater than
two
i think
it's not so good it's
so
now we can see what our top words and
titles in our news and we could use them
as new
topics that we query uh our database
uh our gta database
as such right
so there might be some
that
india
and so on so we we have some of these
words that we could extract from the
titles basically that are
most frequent um in there so we could
basically incrementally expand our news
graph based on existing news or based on
a different data source as well right so
i can also say i have another database
which gives me gives me topics
like wikipedia or something like that
and then like very cheater from
that so there's also quite a lot of as
you can see quite a lot of more complex
text and collection management that uh
neo4j and cypher can do so um the sky is
the limit here in terms of what you can
do
right
cool so probably also something that i
want to keep for you um
cool that's about it if you have any
questions so mike has a question
does the api show anything like giving
queries that's a word time all the time
serious
yeah unfortunately the rest api doesn't
provide this mic um at least i couldn't
find any anything and
you can the only thing that you can say
is i want to specify like two hours ago
up to two hours ago up to two days ago
up to seven days ago
and um
so i think the rest api of gdl is not so
so great it's good enough for my simple
exploration but i think for real usage
you will probably use the bigquery um
things where you have all this
information you have timestamps and
topics and items and elements and things
like that so you would take the data
from greek bigquery
and set up a pipeline that queries that
and then turns that into a into your
input stream for the graph and then you
could either connect bigquery directly
or via kafka so um to
to neo4j uh
so uh ryder has a question about aura uh
so
aura it's not so different from neo4j
community edition except that it's fully
managed so you don't need to
set up your own hosting you don't need
to pay for your own hosting and um you
don't need to manage updates and
upgrades and backups and things like
that
um
yes that's a good point right you should
do a session on that compares the
operations aspects of aura
um
as such a
good point uh we'll take this into
account thank you for the feedback
as such
by the way if you want to see what the
differences
are
there is
on a pricing page for aura down here
there's an comparison chart
for what's included on the different
levels of aura both in terms of security
features um upgrades uh
backups and and things like that
availability
support and so on encryption
and so on so there's uh these kind of
things are uh here and also described uh
in this
in this aspect as well
so there's more to it uh so the free
tier of course is kind of true just to
get started
but then
in oral pro
it continues to kind of increase in
terms of operational features and then
or enterprise for
production systems basically
as such
but it's a really good point uh so we'll
do a session on that
cool mic let us know how it goes uh feel
free to drop us a line either on discord
so you can go to
would love to hear uh
what you see there's also a repository
from a colleague of mine
um
that i can share in the chat as well
um
then he started already to look into
that as such
so he uses uh i think spark
if i'm not mistaken for extracting
the data
and uses the bigquery jdbc driver to
connect to bigquery and then
pull the data from there so mike if you
want to explore this um feel free to
have a look
cool uh then thanks a lot for you for
your time and i'll add
these screenshots that i took and the
device that i did um to the github
repository so check this out and let us
know
also if you have other ideas for
sessions and data sets and topics that
you could cover in the
discover aura free sessions as well
cool thank you all and have a
great day
talk to you soon bye