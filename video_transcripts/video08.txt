i'll jump into here
so um just quickly
what what is it what's going on and what
are we doing today
so um
the plan is um i'll quickly go over what
what is neo4j or free if you if you are
watching this series regularly you you
know by now but just for for everybody
that is new uh i'll give a quick quick
overview we'll pick a data set um if you
uh uh in chat or if you watch this on
demand later on in youtube um
have a data set which you think oh this
could be interesting this could be fun
for for michael and alexander to explore
do let us know
send us a tweet send us a discord
message or or
reach us via email
and then recommend the the data sets and
we can have a look and see if we can
have it you know
in one of our next sessions
um after we pick the data set we think
about what kind of questions we might
ask depending on a data set we do a
little sort of a modeling exercise um
somewhat uh and go from there
um determine the data model obviously
which which then defines
the the um the session and then we load
in query basically so this is this is
the core of of these sessions it's it's
rather quick
and it and it really shows you how how
easy it is to get from okay i have a
data set
let me get a rough model out on arrows
get this data set over into neo4j and
then you're done
so with that the quick overview what
what is a neo4j aura free it's a
obviously free version of neo4j aura
which is our database in the cloud
offering
um it is a little limited to to uh in
contrast to other the other editions we
have but not not so much so you get 50
000 nodes and 175 000 relationships in
in our for instance
uh you have access to neo4j bloom um
which is and usually is an enterprise
feature
and obviously browser as well
uh the the big plus point is you it's
free forever so you you have it as long
as you like it
um
and
you can
play with it you try things with it you
you you work work with it uh and then
see if you like it
um
and you go to the landing page that is
that is written here i'll put it in chat
afterwards and you can basically um if
you watch it on twitch you can also put
in exclamation mark or and you get the
link directly
and you can try it um you can you can
even play along a little bit as we do it
it takes a little bit to get to get
going in
in the beginning so if you haven't
registered yet i recommend you do this
right away otherwise
um you can just follow along and watch
us and then play play in your own time
afterwards because you know it might it
might take a bit
uh all right let's get going um this
week's data set michael already hinted
at it it's going to be kickstarter
we have
a file
of it that is showing that the data of
375 000 or plus kickstarter projects
from almost from
from 10 years or over yeah from 2009 to
2017.
um
it's um it's it's all kinds of thing
project names categories launch date
deadlines goals amount pledged and so
forth
so um i think that's that that gives
that's pretty decent data set and gives
us a good overview
um if you have no idea what we are
talking about kickstarter is this this
website where you can um
fundr uh fundraise and then obviously
fund uh other projects like like michael
already said it's there there are varies
and i i looked around the page earlier
just to to get uh to get um myself or
because i haven't checked it out for a
while uh and i got down the the rabbit
hole quickly so i clicked on from
projects to projects and i was like oh
this is interesting and this is
interesting and some more so
uh it's it's many are in the gaming
categories you hear a couple of of games
others are
books or art projects others are like
here for example this sounded seemed
interesting to me is like a reflector
thing for your for your bike so
creative projects like like the other
ones so
it's it's all over the place so very um
very interesting and i think we see um
if you look into the data set maybe like
a collomation of a couple of of top
evergreen categories uh and very
successful for projects
and just some of the questions you can
ask right so exactly
and just to give you a quick overview
before we dive into data so really they
have a stats page on that on there on
their website
and
this is the amount of dollars pledged to
kickstarter projects in total so that's
six billion dollars so that is
significant money
yeah
and over 200 and almost 210 000
successfully funded projects so
um
that is that is very interesting so um
and and this is only one page right so
there are other other of these
crowdfunding um pages around obviously
kickstarter is the biggest one but but
still this shows uh there is desi and
demand and like like you said michael
right i mean it's
it's it's clear you have
you have a test run you have a you can
you can gauge how much interest there is
for your project if you
if customer base would be would be
established or if if not then
you can uh you can if you successfully
funded you can deliver um a product to
already your your customers
yeah which is really cool yeah it's
definitely a good way of testing the
waters without
having to pre-invest all your own money
uh because it
it's actually a non-committal for both
sides right so if project doesn't get
its funding pledged then it will not
succeed for instance we did a
kickstarter project once which for an
art project which didn't
[Music]
succeed funding to be
sustainable and viable right so it's not
enough to get half funded because then
you can't build whatever you want to
build
uh thanks so much alex and um
so let me share my screen real quick
this one
okay
can you see it
yep here we go
okay cool um so and what i wanted to do
is kind of look at one of the projects
so that we get a
feel for the um
let's see one of these
gaming projects here feel for the data
basically all right so the data that you
get
is on this page called
maven analytics and they have like in
the data background several projects
including the kickstarter project so
it was the one that i found was quite
nice and generally
applicable so you have multiple projects
here and so i just selected the
kickstarter and then preview data you
see the data and i just wanted to to
show you how this relates to the actual
kickstarter project page so you have an
id name categories of categories country
launch deadlines status
goal how much money was pledged
and how many backers and the state of
the project was increased
okay and if you look at one of these
projects you see that that's kind of how
they are represented right so there's
the id in the url
uh the title
as such
the launch date
is somewhere on the right side down here
i think
what it used to be
um
actually it's oh this is really funny
crazy alex it's from mama sweden
oh yeah
it's close close enough yeah
share it with our colleagues basically
and so they can
have the creators come along in the
office to do a test run of the game you
have a lot of boot game
so you have the total pledge amount uh
you have the number of backers how many
days to go
and then here's the deadline basically
and somewhere is also the
uh
launch date as well and the state of
this of course is it
um is it was it successful is it
cancelled is it um
[Music]
has it failed basically to meet its
pledge
and that's kind of the data that we have
in this data set so that you could
imagine of course much more data like
more details about the project more
details about the backers
uh like all the pledges could be in the
data but the data that we got here
um that was actually scheduled from a
colleague of ours uh jennifer wife so
she found this um site
uh so we can yeah but this is this is
this is already i mean we see when it's
launched where it's launched um what the
goal was um
and stuff like that and which especially
which category i guess so one of the
one of the questions i would i would ask
is like which which are the categories
are most um
most successful maybe with
you know
exactly although that's something that
you can do is now basically look at the
uh model what could the model look like
as such
if you have any questions in in chat
you'd like you'd like us to to explore
type it in
um well we well we develop
the model and arrows but if you have
anything you you want to you want to see
with this data set then
yeah
so we go to arrows dot app so you can
follow oh before we start um so if you
haven't seen neo4j or yet so you can go
to the links link that alex posted which
gets you to
console.org you need to log in
and then you can
create a new database you can click the
create database button
and then create a new database and or a
free database you give it a name you say
load up create your own
data in a blank database and click on
create free and then it basically
tells you it will
do this in the background you have to
copy the password please keep this
around because otherwise you need to
create a database
and then it basically goes ahead and
creates the database but it takes a few
minutes so if you do this now while
you're talking about the model then it
can run in the background um to create
your
or a free database
cool um
super so if you look at uh what the
model looks like so we have definitely a
project right so which is kind of the
essence or the core of all of this so we
can actually
take this project and turn this as a
label into a label so it's now
something that text the project and then
we have number of properties so we said
we have the id which is in let's say a
string
we have the name of the project which is
also a string
we have the
launch date which is a date
we have the
[Music]
what's it called finish date or
something like that
deadline
we have the deadline
which is also did
and then
that's kind of the debates of the
project
and then uh what's maybe the goal
is that also yeah that's a that's a good
point so we can put in the goal here
uh
goal which is a number
and but it could also be yeah it's like
a debate right i mean it could be
exactly let's talk about this a little
bit later so
the other thing that we saw which is
pretty obvious is basically a
subcategory
which you cannot slit this table here
and which is basically just a name right
so
um
and which then points there's also a
category yeah
exactly so
so the other thing that you can probably
pull out of the project is the country
let's see we also have country in there
which should also be
okay and country of course has also a
name
so
now um
the question is what do we do about this
other
attributes so we've covered id name
category subcategory country launched a
deadline
[Music]
depending on
[Music]
on the stage so the first thing is how
can we model the state it seems there
are only
three states basically failed successful
and cancelled
as such right
um
that's what it looks like here store
this as a property but what you could
also say actually we can turn this also
into a label later on so that you can
quickly see and filter
projects of different
states
visually as well and then we can group
in our queries really quickly but that's
it that's a question that we could
discuss depending on the questions that
you want to answer
so um
[Music]
you can also put it in both places so we
depending on what you want to do
so but for the time being
um
let's
let's
put it as a property first and then we
can show you how to turn this into a
tray label basically as such
as in in post processing so any other
thing is um what we can do of course is
to just add the uh gold pledge backers
uh as well to the to the project as
properties um depending on on
imagine this is like a finance or um
like a portfolio uh information or so
then we could um
also pull this out as a support node and
for saying differences financials or
something like that right so
so imagine
yeah or status or something yeah
exactly something or like like payment
or whatever we want to call it right or
status or so
so and then imagine there's something
this is not like public sort of
information but something where the
payment aspects are actually private or
so then you could kind of keep this out
of the main project and then give only
access to this separate information to a
certain set of people for instance right
so that's an option
um as such which you can pursue if you
wanted to um but it's
we don't need to do it but it would be
interesting right so we could also say
actually
um
based on the status we could have
different relationship types here for
instance
we could also say succeeded or something
like that
yeah
right and then we could have uh like
here and
failed
and here and cancel basically
right so uh
and then have status of the three
kinds where you have
opposite goal
[Music]
and
right um so that's kind of the status
which we would repeat here so we have
several options on where we want to
store this uh so initially i would say
let's start on a project itself and then
we can pull it out if you want to right
so that's kind of up to us depending on
the time that we have and the questions
that we want to answer and ask
as such right but it could be for
instance a
security thing they pull out the
information
[Music]
that's
finance related and and don't should put
them into the main um
main entity as such yeah
yeah so this is an option uh let's keep
this in mind put it initially we put it
on a project and then we decide on what
to do with that
okay cool uh so that's what the model
could look like questions that you can't
answer for instance or ask is are there
any groupings of failed or successful
projects by country or by category or
which categories are most
uh
most backed for instance or are there
any um
what's kind of the average
number of backers per
project or
how much does each backup physically
pledge if you see the the total pledge
and by the number of backers and see
kind of what's the
dependent on the project based on these
country and subcategory uh things for
instance and then we can also cluster
things for instance do we see for
instance successful projects
uh by subcategory or something like that
so that we have if you have recurring
categories uh then can we see is there
something that
clusters things together for instance as
well right
so these are some of the things that you
can look at
okay um
so the next step would be downloading
the data so if you click here on
download then you get a
50 megabyte large
uh csv file in the zip basically so i
already uncompressed this and because
aura as alex mentioned it's a little bit
limited in terms of amount of data that
can fit in there
we can
uh you can't load all the data into it
but i actually had a really interesting
uh idea what we can do so usually um if
you have to csv locally then it's a
little bit more
effort to get it into um into database
because as aura runs on the internet it
can't directly access your local files
uh as such
right so you would have to upload it
somewhere for instance to github or to
s3 or also to make it available but what
you can also do you can also upload it
just into google's spreadsheet
and that's actually interesting right so
uh in the
in the kickstarter zip file there was a
dictionary csv so which is basically
this which i imported here which is
basically the fields again and whatever
they are right yeah that's handy
and then uh the other thing uh that
there's this file with the 370 000
projects or so and i just put them on
the command line into 100 000 project
launch
chunks because i learned
when i tried this that actually google
sheets has a limit on like uh size as
well which i want to know okay so the
full 370 000 they didn't like um but the
hundred thousand uh elements um
hundred thousand row um
chunks it can actually import into
google spreadsheet which is still pretty
impressive because it all runs in a
browser right and um
managing a hundred thousand rolls of
data in a browser in an efficient manner
is still
a good
a good
capability of such so and this would
look like this so this is the last chunk
so this is 70 000
projects
so you you see we have the header here
and then like all the data
and um
to access this from neo4j there's some
cool feature in google spreadsheets
which is called publish to the web
and then you can select for instance a
single
tab here
and say i want to publish this to a web
page but that's not what we want to do
because webpage would be hmash page you
want to turn this into copper separated
value
and then click the publish button here
which i already did before so for you it
would be green and you can click it and
then it will publish it so that means
when i take this url
here
and open it in a new tab
then it will basically
download the csv
see
super
take a second so
nine megabytes of speed okay
so and to make it easier for you i
actually uh turned it into a bitly link
uh so if you go to uh dev or if you use
dev dot neo4j.com
slash kickstarter
uh so you don't have to remember and
type the whole uh link and you can use
my uh url as well then this will also
give you the access to this nine
megabyte lodge csv file
we will put these links in uh in the
recap repository for after actually alex
uh
perhaps you can also put it into the
chat i can i'll put this one in the chat
but just if you're wondering everything
will be
okay
so uh
then we can actually get going so i hope
that your database is up and running
uh so for me it's here an aura
it's called kickstarter it's a free
database it has a connection url
it runs for me in belgium clearly it's
empty so no nodes no relationships
and
now i can open it with an evident
browser
that's where you need your saved
password as well so this is kind of
feminine with your browser
and i already played a lot around a
little bit with the data but i'll show
you uh what this looks like
so if we
get started we can just say
use this here uh load csv with headers
from and then put in the ul that we just
discussed and you can even put in the
bitly link here i didn't know exactly
that's the cool thing because basically
basically automatically redirects
http
302 it really directs the link and
and then neo4jbc follows the redirect
as row
and then we return
[Music]
so each of
the lines of the csv is actually turned
into an
hashmap or object or hashtag dictionary
whatever you call this
so key value paths or object
we always have the key as the header and
the value is the
the attribute in the in in a row right
um
and
that's what we got all the values are in
a string so we might need to convert
some of those into
um into um other data types like numbers
or dates or so
um
but that's what we get right so for each
entry we get one of these uh maps here
which is really nice and then we limit
it to ten so we said
fetch 10 records from our total number
of records we can also actually check
out how many total
records are there so if i
if i go here if i just say return count
star
and shows me that it has
it loads to nine megabytes
and
come on
so it has 75 000
which is a little bit too much for our
needs so what we could do we could
filter this data so for instance what
you could say with row where row dot
state it is
this equals success
right so if you only look at a
successful project
then that's 26 000
project which would actually fit into
our database but then we have the
problem that it doesn't we can't
differentiate by successful and
non-successful projects so i thought
have she just limited to a year as well
they can say for instance
um
the deadline
of the project is in um
yeah launched data it's in
2016 or something like that right
launched
code launched it or launched
and we just because of the string starts
with
2016.
so this gives us
let's see
22 000 projects so across all the
countries
all the statuses
um that's actually a nice number so
i guess that's what you can go with
right
and now what you can do is create the
project and and go from there right
and the only thing that we want to do
before is create a bunch of constraints
uh create constraint
on
p project
as p dot id that's unique so we can
insert unique ids for projects
and
um
so they are easy to find faster find and
also we don't get any duplicates in
there
we do the same
for
categories and subcategories
for the names
and then the last thing that we had was
countries right
so we have now four constraints which
you can also show actually
the schema colon schema shows also
constraints and so we see
we have our subcategory category project
and country constraints which are all
online so it's so much
or indexes with constraints down here
right
um so that's good
and now we can get started actually
right so let's get going so we still
check to 2016 projects
and what we want to do is we want to
create the projects first right
where the id is row dot what's it called
id id
uppercase okay
and then
i mean i dropped a database anyway
afterwards but um
and then we say basically when we merge
this um
[Music]
what we can do now is uh set properties
on this on this project there are two
options you can either uh
run your set which always
sets or updates properties or there's
also something that you can say on
create search then it only up creates
these properties on the first creation
of this project and the second time when
you run the statement which will see oh
the project's already there and i don't
need to
update these
properties research so we can say
[Music]
we want to
set a lot of stuff on this here right so
we have the
p name
equals
row.name
then
we have to launch date p dot launched
equals so this would be a date
uh
let's see if this is actually
for daytime this is actually right time
if this actually works or if it
complains about the syntax because
i think it needs the
iso format more
with the set at the end
[Music]
unfortunately there is um
a did pause which where we can
define it for with ourselves which is
much more convenient
um
so we can add your apoc temporal
pass
[Music]
space or
minute second
so and this
[Music]
can't remember my own stuff
[Music]
i just posted
daytime developer guides
to its own temporal okay
this is not such a nice
name
[Music]
two
so
okay now we have an
uh date time here from this right so we
can
use this for the date
p dot launch is apoc tokens on temporal
from
pro dot
launched
the other other thing that we could do
is actually if you're not interested
introducing the
in the time information
as such
then we could also say um
[Music]
and take only the first part of this and
turn it into a date as well so that's
also possible right
so p dot um
deadline is row.line
and this is actually a date
because the deadline format is
it seems at least the date yeah
yeah
then the other things that we had was
let's say
the state
[Music]
so and we can set the other information
later right so that's just to to get a
few projects in
let's see if this works
so uh if this worked we should see here
on the project uh so you should see more
than zero
rows uh
such
so it said it created uh nodes with this
so if i now click on
project
here we should see actually a bunch of
projects
right when we see
the deadline the id the name and the
state and i mistyped state of course
that's not so great
um
so we want to set
and dot state
state equals and.
and remove and not
switch right so that's i mean that's
also something that happens when you
import data that you make errors or
mistakes or so but you can also always
fix it
and
for instance
remove
prename things by just setting them to
another property and
and then uh
the set property goes away basically
right now it should say state actually
yeah
right
and this actually something that you can
do here as well is we can say okay find
me all the projects where
n dot state
state
equals failure
actually that's
that's a good idea anyway that we say
let's see how many of each type are
there in our data set right so they
give me the projects
and then return the results group by
state so we say this is the state and
count starts for each state
and so this should give us a bunch of oh
nice see that more states okay yeah okay
so we have failed successful cancelled
live which is one
and suspended which is probably legal
violations of some trademarks or other
yeah i guess uh or
behavior
but the main three ones that interest us
are shared successful in cancer
basically right
the other ones are just
minimal so what we can do now with this
information actually is to say um
we want to say where
and dot state
equals failed
you can actually set a prop a label on
the node set
n dot failed
so that's as easy as
as it is right so
and we just run this three times with
with successful
and
last one was canceled
okay oops
english american spelling yeah
um so now we have three new labels you
see this here um canvas failed and
successful and if if i click on any of
these then i get only notes with this
label so this would be
only projects that are also successful
right
so that's a nice uh let's say model um
the factoring that you can do when you
say okay i want to see this basically
categorized on an um
on that level then i can do it from
there as well
okay
um
so now we need to get the other things
in as well right so
let's continue with the
with the categories
so we import our data again or load our
data again and say
for each
project we also
create a subcategory
with the name
of bro dot
coin
right so let's see this field
and then uh
we would
create a relationship between the
project
in category
let's see
and at the same time we can also do
immediately the category that's also
okay we just say uh
our category
is the
contemporary
and we created again a relationship
between
[Music]
the category that's right between the
subcategory
and the category so we have a two level
category trees to say so right
right so we basically find our project
with match
then we create a subcategory if it
doesn't exist if it's already existing
then it will just return the existing
one
and we create a relationship between the
project and the subcategory
uh the
creator category if it does not exist
yet if it exists we just get the
existing category back and then we
create a relationship between the
subcategory and the category if it does
not exist yet
right
and if we run this we should get more
nodes and hopefully
there are not tens of thousands of
categories because otherwise
our
number of
so
our number of
nodes would exceed what we have here we
can do a quick check on how many
categories are there actually in our
database
uh so 15
okay
and some subcategories there are 157 so
a 10x basically as such
and actually what you can now do is
actually can visualize this
uh our whole category tree
uh
as such
so we just have this graph pattern a
subcategory that's in a category
right and that's a
path basically so uh from from the
category all the way down to the sub
categories
and then we just return all the parts
and because it's only 157 it should
actually fit in the visualization and if
i run this
let's see if we look at the graph
visualization
and i make this full screen
so we see
and zoom out a little bit
we have
here
categories
yeah connections that's interesting
that are connected
um
which is actually an interesting
question right so because you could say
in principle
only the root categories should
basically
be unique
but the subcategories if the same name
appears and
appears twice in two different places
the question is should this be actually
a connected category or should they be
unique within their category right so
what we did right now is that we made
them globally unique also the
subcategories
but you can could have also changed the
import code to make the
subcategories only unique within the
category as such
um
so there would be like here in this one
with these events it would be actually
two events notes right true
that's the question right so and then
now if i for instance open up this
events notes then it would show me all
the projects that are
in 2016 that are collected to connect
between events right
and you already see as well
which ones are failed cancelled and so
on the colors are not so helpful
[Music]
we make category perhaps
blue or something like that
and then we can do a subtitle as dark
blue so they have some relationship
or the other way around
that's
that catering category is stuck to and
and then failed is
read
we make green
[Music]
right and yellow could be uh
for instance um
cancelled or something like that right
so if you spawn some more
we also have cancelled here so we can
cancel yellow
so we see already visually basically per
category
how many are successful and how many are
not yeah it's very very clear that
this category is lots of has creates
created lots of fails
yeah yeah what is the name of the
category
someone wants to do let's say a concert
or an uh a reading or theater
performance and so right so yeah people
are much less likely to pay for like odd
performances then this over here is
comics
and comics seems to be much more
successful
as such right and i guess if you go to
something like let's say video games or
so
i think
graphic novels
oh see um
this is comics within comics so there's
a larger subcategory comment comics
and then there are other other things
right so there's also theater
uh spaces
food
i'm not sure how successful food
actually is you can actually look at
this
fashion
crafts
diy is also 3d printing like this yeah i
think 3d printing projects have been
quite successful or are there
you can make guesses actually how
successful certain things are actually
there's also
poetry more arts projects
civic design graphics design photo
journalism technology here i think
something like gadgets also i think
might be the biggest category and might
be also quite successful let's see
oh yeah that looks big you need to
need to zoom out a little bit
and that's also for 2016 only right oh
it's 50 50 perhaps right so it looks not
as much yeah a couple cameras
yeah
because they're also more expensive
usually gadgets and
yeah
but that's actually a great question
that you can start answering now is
basically
um
[Music]
if you want to say per category per top
level category right we have this
pattern here
in a top level category there is a
subcategory
and
i want to have the projects that are in
the subcategory as well right
here's our project
and this time we don't want to return
the parts but we want to say per
category how many are successful and not
successful basically uh
[Music]
right so we return the category name
and then across all the subcategories
please say
p dot state
state
and then constant right so we say
from this category via the subcategories
to the project so which is already like
two
four joins away in the relation database
and for us it's kind of just a simple
pattern that's also even understandable
right
um here this sub project
um
what's the category name uh the state of
the project and the count and then we
say uh for instance
border by
uh first by
like count
let's say
descending so the
the biggest
ones first
and then within each count i think we
don't have too many duplicates and then
let's say limit 50 or something like
that
so
that means in the technology we have
1500 1800 failed ones in finland video
we have 400 field ones so you see
failed ones dominating actually it only
starts to get successful in games with
1100
successful ones
so
we can also say um
basically just how many projects are per
category then we just say uh
we don't include a state into this
result but just look at the
the total projects in this overall
category
right
and then
then we can actually count
we can
could count by um
by status basically as well
so
as
count star is total and then you could
count a
[Music]
case when row or when p dot
let's say failed
then one else
now and so
these are of our failed projects
and we do the same
[Music]
for successful i'll leave off the
canceled ones for the time being
that's the rest more or less
so it counts so you could also use some
here um it's probably more obvious to
use some um so
uh this is kind of just a condition when
this project is failed and we return it
one otherwise it's zero here
and we sum them up
right and then so we have
in this in this column all the fill
projects and in this column all the
successful projects
and
[Music]
and we return the category
the total
and then
actually uh
filled by total
and to float
field
that's right
so this would be actually our
success percentage and this is our
kill percentage right so we can now say
also
per oops
and yeah don't miss that
so we can now say okay what's the
what
that's your
i think your uh two flow the the success
uh
yeah that's all
right because yes
so you see that and now we connect the
order by
order by um
which is more successful right
success percentage descending
so we can see now over all our top 50
categories actually we can
remove
this limit here actually
and
so this is our 15 categories
now right yeah and you see that the
success percentage for comics is the
highest second one is dense actually
which is it's interesting dance i didn't
think of that great i mean
yeah and games actually have a much
lower but
this could also be because dance is only
195 projects yeah
right so that's also skewed by just a
sheer number of or what's the
competition also between the projects
basically as such right
yeah games is one of the top categories
for sure that that why it has so many
also like you said lots of competition
crowded space so it's it's much more
difficult to get
um to get uh attention awareness and
then obviously money for funding
yeah exactly so and now what we also can
do is basically we can
[Music]
merge the country
right in here
and say okay from the project we get the
country and then
connect the countries to it
which is interesting so we can run this
and remember this is all powered by this
google spreadsheet which delivers our
data every time we query it right so
which is kind of also quite nice
and whenever jumping changes here in a
google spreadsheet it actually publishes
the
data
as you can see here automatically power
placement changes are made so whenever
you change something in your source data
here so you can even easily imagine
getting your data from somewhere turning
into a spreadsheet and then publish it
to the web
and then uh use that private url
basically to encode your data which is
quite nice
um so we got no countries in as well
should probably give them another name
another color
let's see country gets
so these are the countries that are in
there and now we could for instance do a
simple query that says
how many projects per country were there
where we just say we return the country
name
and the size of or the degree of the
country which is basically the number of
relationships a country has
so n
and then we just see how many
relationships does it have
and
how many countries do you actually
um
yes
projects
so with the size you
what
what is it looking at is it's looking at
the node look at this pattern at this
pattern to say so right and then there's
how how many relationships of this type
are
of this kind of attraction note here i
didn't say anything about a
relationship but i could also say this
is an
um
in
[Music]
country
relationship for instance right because
if you have multiple relationship types
okay that could be different right so
for instance this is all as projects and
we call it also
border by
project descending
space
here
oops
from oh
it's in the wrong direction right so and
it's our country so we want to actually
point to the country right and not
so
very unsurprising
yeah exactly yeah but what's actually
interesting i wouldn't have thought that
canada has so many projects compared to
lucky next one right so yeah
after all canada has much fewer
citizens than frances germany uh and
such right
and i think at least
correct me from wrong
but that's interesting to see right i
know we could do a similar um
competition with a computation with our
um
with our success
rate here
so for instance if i say is there also a
success rate
by country to say so right where we say
uh just in country so we just change
here the pattern
right
and
what we named it the name which i just
did now and if we run this
then actually we see that
united kingdom has much higher success
rate than
new zealand
which is higher than singapore and then
united states again because of the
competition yeah exactly actually
on position six right so which is kind
of really interesting
because i also do like this i mean you
saw this when i when i showed the pages
they they do this near you thing and i
guess then if you are in a country like
singapore or new zealand where there are
not so many then you get
much more visibility than in in the
states yeah
so what we have done now uh so far
because i just looked at time and so
that we're already pretty far into into
the time
as
we have our
project which has basically these three
sub labels
uh success failed and cancelled
uh we have some categories that point to
each other
and we have the country so if i remove
these labels here from from the viewer
success cancelled and
payout
this should almost resemble our
model that we have right so
so this one is actually not correct this
relationship type
but that's only an artifact of this
visualization here
if you used um
a cog metagraft and
that would be correct
so we imported now
so we have
category
country
and then or in between
right
[Music]
so um
so you put it 22 hours notes 45 000
relationships you know into our free
database you could access this now you
could even start creating a kickstarter
like overview page where we say okay can
we do something like listing projects
and
showing their their numbers and pledges
we didn't import the pledges but that's
pretty straightforward because the only
thing that you need is to do
at least if you just stored on a project
for the time being
uh down here there's our load thing
uh
we would again
just match the projects and set these
additional properties so we would set
p dot
pledge
uh equals two
integer i think these are all integer
numbers row dot
uh
attached
exactly
pledged then we had
echos and
goal right
let's see
yep
so this is the goal
and that p dot backers
equals
so this should
now
run and set
another
twenty two thousand three times three
sixty six thousand properties
uh if you go
yeah
so okay it did it and now on each of the
projects you also have
the um
the patch information as well
so if you look at the project again
clicking on this project link here you
can also go to the table view and then
see like the details of each project and
obviously also okay these are not
strings anymore like
data but actually numbers so we can also
compute things like giving the projects
with the highest investment by backers
right so that's a fun last
question that we can answer
um so that means we want to actually um
divide the uh the pledge
by the number of backers right
that's kind of the investment
right
that's actually the pledge value right
and then we just say n dot name
so we get our project name
and our pledge value and we just return
this
[Music]
and order it by
so these are projects with high pleasure
so let's say ten thousand dollars but
only five back office like that right
and if you look at top ten
oops
we of course need to watch out for the
projects that have actually backwards
right
otherwise we get division by zero uh
yeah maybe two uh only successful ones
uh
or oh yeah okay
journey to descent off to earth
pledge value is ten thousand dollars
so someone pledged ten thousand dollars
but i'm not sure if if she actually
succeeded or not yeah maybe it can be it
can be
yeah exactly can we show that yeah
now we could also fit out for any
successful ones right
but yeah okay yeah it actually succeeded
oh no
state
okay
condition here where we just say
successful on a project
uh then we don't need to output this but
we can just uh
just find successful projects
cooks at your home so someone is cooking
at your home
a
and so people paid six thousand dollars
six thousand eight hundred dollars
on average that's the average pledge
right so
um
or here an art guitar a special kind of
guitar probably i guess
yeah maybe
uh go cycle electric bike
12 500 i mean that's probably if you
want to get a bike then it's probably
obvious
oh but interesting to have a look 3d
printers for two thousand dollars
nice watches
when you watch it yeah probably smart
watch things like this either smartwatch
or this could be a stylish mechanical
two billion watch so that oh actually
this is like yeah they're obviously more
expensive than yeah but that's actually
cheap for one of those right so if you
think about colex and the other one yeah
two dollars is actually not
so much money
yeah so that's this was kind of a funny
exploration of the kickstarter data set
uh there's of course much more that you
can do with those build applications
with it do recommendations do
co-occurrence of of countries attacks
and then uh categories and everything
for that if they also had like the the
person or the group pledging that would
be interesting because then you could
see repeat pledges as well people that
do it for business or for living
yeah but you could probably go to
kickstarter and use uh apoc load html or
audio api with the project id and fetch
this additional information from
kickstarter directly that's that's
something that you can do another time
to have it they might they must have the
data for sure because on their like
on the stats page i showed earlier they
have this total backers which is 20
million and repeat backers is 6.8
million
so um they have they know that people i
mean i have i have like
picked 10 or so different projects
so um so yeah i think if you do it once
and you kind of have a good experience
with it you you're more more likely to
to go back
and try some other things
yeah ultimate people that are repeatedly
actually uh starting projects basically
oh i see yes oh well that's the yeah
okay so because that's public
information backers might not be public
information as such
but the group doing the actual uh
yeah yeah exactly you can if you
if you scroll up that page um i i think
you can make it
so there's a group and then you i think
they
they have um
they have
the individual user yeah uh first
checked has has other projects
i don't know where this where this sits
exactly used to be here on the right
side but it used to be yeah i'm just
confused
yeah
but it needs to be somewhere right so
who is the
owner of this project as such right yeah
that's the category
oh now we scroll down a little bit
um and then top here it's where you'll
be
exactly here to create it to back so for
example here
exactly this kind of
information it would be nice to get this
from the data but
i think that
all right
cool sounds good hope you enjoyed this
and this was useful for you
um
if you have any other questions
feel free to reach out to us and happy
to
to do more